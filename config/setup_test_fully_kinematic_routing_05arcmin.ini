[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
inputDir = /data/hydroworld/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap = CLONEMAPFILES
cloneMap = /scratch/edwin/input/cloneMaps/from_top/newMasks/mask_M19.map

# The area/landmask of interest:
#~ landmask = LANDMASKFILES
landmask = /scratch/edwin/input/cloneMaps/from_top/newMasks/mask_M19.map
# If None, area/landmask is limited for cells with ldd value. 

# Set the output directory in an absolute path.
#~ outputDir = OUTPUTDIRECTORY
outputDir = /scratch/edwin/test_kinematic_wave_5arcmin

debugWaterBalance = True

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output
description = test version (by Edwin H. Sutanudjaja) 

startTime = 1960-01-01
endTime   = 2010-12-31
# Format: YYYY-MM-DD
timeStep = 1.0
timeStepUnit = day 
# PS: The current model still runs of the daily time step.

# spinning up options: 
# Note: for the purpose of DA, there should be no SpinUp 
maxSpinUpsInYears = 5
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
temperatureNC   = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_temperature_1958_to_2010.nc
precipitationNC = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_precipitation_1958_to_2010.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Input
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC  = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_referencePotET_1958_to_2010.nc

[meteoDownscalingOptions]

downscalePrecipitation  = None
downscaleTemperature    = None
downscaleReferenceETPot = None

# downscaling (based on the digital elevation model):
# The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells. 
meteoDownscaleIds = None
highResolutionDEM = None

# lapse rates:
temperLapseRateNC = None
precipLapseRateNC = None

# downscaling criter
temperatCorrelNC  = None
precipitCorrelNC  = None 

# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):
smoothingWindowsLength = 0

[landSurfaceOptions]
debugWaterBalance = True

topographyNC     = PCRGLOBWB20/input5min/landSurface/topo/topoProperties5ArcMin.nc
soilPropertiesNC = PCRGLOBWB20/input5min/landSurface/soil/v03Jul2013/soilProperties5ArcMin.nc

clappAddCoeff   = 3.0
matricSuctionFC = 1.0
matricSuction50 = 3.33
matricSuctionWP = 156.0
maxGWCapRise    = 5.0

numberOfUpperSoilLayers = 2

includeIrrigation = True
# if True, there are four land cover types defined: forest,grassland,irrPaddy,irrNonPaddy
# if False, two (natural) land cover types defined: forest,grassland

# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
#~ historicalIrrigationArea = None
historicalIrrigationArea = PCRGLOBWB20/input30min/landSurface/waterDemand/irrigated_areas/irrigationArea30ArcMin.nc

includeDomesticWaterDemand = True
includeIndustryWaterDemand = True

domesticWaterDemandFile = PCRGLOBWB20/input30min/landSurface/waterDemand/domesticWaterDemand30ArcMin.nc
industryWaterDemandFile = PCRGLOBWB20/input30min/landSurface/waterDemand/industryWaterDemand30ArcMin.nc

limitAbstraction = False

# zone IDs (scale) at which ground- surface-water allocation is performed  
allocationSegmentsForGroundSurfaceWater = others/irrigationZones/one_arc_degree/uniqueIds60min.nom.map

[forestOptions]
name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

#~ landCoverMapsNC = PCRGLOBWB20/input5min/landCover/forest/forestProperties5ArcMin.nc
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover     = PCRGLOBWB20/input5min/landCover/forest/vegf_tall.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/forest/minf_tall_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/forest/maxf_tall.map
rootFraction1    = PCRGLOBWB20/input5min/landCover/forest/rfrac1_tall.map
rootFraction2    = PCRGLOBWB20/input5min/landCover/forest/rfrac2_tall.map	
maxRootDepth     = PCRGLOBWB20/input5min/landCover/forest/maxrootdepth_tall.map	

cropCoefficientNC = PCRGLOBWB20/input5min/landCover/forest/cropCoefficientForest.nc
interceptCapNC    = PCRGLOBWB20/input5min/landCover/forest/interceptCapInputForest.nc
coverFractionNC   = PCRGLOBWB20/input5min/landCover/forest/coverFractionInputForest.nc

# initial conditions:
interceptStorIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/interceptStor_forest_1960-12-31.map
snowCoverSWEIni  = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/snowCoverSWE_forest_1960-12-31.map
snowFreeWaterIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/snowFreeWater_forest_1960-12-31.map
topWaterLayerIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/topWaterLayer_forest_1960-12-31.map
storUppIni       = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/storUpp_forest_1960-12-31.map
storLowIni       = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/storLow_forest_1960-12-31.map
interflowIni     = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/interflow_forest_1960-12-31.map

[grasslandOptions]
name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

#~ landCoverMapsNC = PCRGLOBWB20/input5min/landCover/grassland/grasslandProperties5ArcMin.nc
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = PCRGLOBWB20/input5min/landCover/grassland/vegf_short.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/grassland/minf_short_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/grassland/maxf_short.map
rootFraction1    = PCRGLOBWB20/input5min/landCover/grassland/rfrac1_short.map
rootFraction2    = PCRGLOBWB20/input5min/landCover/grassland/rfrac2_short.map	
maxRootDepth     = PCRGLOBWB20/input5min/landCover/grassland/maxrootdepth_short.map	

cropCoefficientNC = PCRGLOBWB20/input5min/landCover/grassland/cropCoefficientGrassland.nc
interceptCapNC    = PCRGLOBWB20/input5min/landCover/grassland/interceptCapInputGrassland.nc
coverFractionNC   = PCRGLOBWB20/input5min/landCover/grassland/coverFractionInputGrassland.nc

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

[irrPaddyOptions]
name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = PCRGLOBWB20/input5min/landCover/irrigation/fractionPaddy.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrPaddy/minf_paddy_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrPaddy/maxf_paddy.map
rootFraction1    = PCRGLOBWB20/input30min/landCover/irrPaddy/rfrac1_paddy.map
rootFraction2    = PCRGLOBWB20/input30min/landCover/irrPaddy/rfrac2_paddy.map
maxRootDepth     = 0.5
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.2

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc

# initial conditions:
interceptStorIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/interceptStor_irrPaddy_1960-12-31.map
snowCoverSWEIni  = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/snowCoverSWE_irrPaddy_1960-12-31.map
snowFreeWaterIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/snowFreeWater_irrPaddy_1960-12-31.map
topWaterLayerIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/topWaterLayer_irrPaddy_1960-12-31.map
storUppIni       = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/storUpp_irrPaddy_1960-12-31.map
storLowIni       = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/storLow_irrPaddy_1960-12-31.map
interflowIni     = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/interflow_irrPaddy_1960-12-31.map

[irrNonPaddyOptions]
name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = PCRGLOBWB20/input5min/landCover/irrigation/fractionNonPaddy.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrNonPaddy/minf_nonpaddy_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrNonPaddy/maxf_nonpaddy.map
rootFraction1    = PCRGLOBWB20/input30min/landCover/irrNonPaddy/rfrac1_nonpaddy.map
rootFraction2    = PCRGLOBWB20/input30min/landCover/irrNonPaddy/rfrac2_nonpaddy.map
maxRootDepth     = 1.0
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.5

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:
interceptStorIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/interceptStor_irrNonPaddy_1960-12-31.map
snowCoverSWEIni  = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/snowCoverSWE_irrNonPaddy_1960-12-31.map
snowFreeWaterIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/snowFreeWater_irrNonPaddy_1960-12-31.map
topWaterLayerIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/topWaterLayer_irrNonPaddy_1960-12-31.map
storUppIni       = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/storUpp_irrNonPaddy_1960-12-31.map
storLowIni       = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/storLow_irrNonPaddy_1960-12-31.map
interflowIni     = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/interflow_irrNonPaddy_1960-12-31.map

[groundwaterOptions]
debugWaterBalance = True

groundwaterPropertiesNC = PCRGLOBWB20/input5min/groundwater/groundwaterProperties5ArcMin.nc

# minimum value for groundwater recession coefficient (day-1)
minRecessionCoeff = 2.5e-3

# initial condition:
storGroundwaterIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/storGroundwater_1960-12-31.map

[routingOptions]
debugWaterBalance = True

lddMap      = PCRGLOBWB20/input5min/routing/lddsound_05min.map
cellAreaMap = PCRGLOBWB20/input5min/routing/cellsize05min.correct.map
gradient    = PCRGLOBWB20/input5min/routing/slope05min.map

# manning coefficient
manningsN   = 0.04

routingMethod = kinematicWave
# Options are kinematicWave, simplifiedKinematicWave

# lake and reservoir parameters
waterBodyInputNC = PCRGLOBWB20/input5min/routing/reservoirs/waterBodiesFinal_version15Sept2013/maps/waterBodies5ArcMin.nc
onlyNaturalWaterBodies = False

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = PCRGLOBWB20/input30min/routing/cropCoefficientForOpenWater.nc

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = 0.0
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
#~ channelStorageIni              = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/channelStorage_1960-12-31.map
#~ readAvlChannelStorageIni       = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/readAvlChannelStorage_1960-12-31.map

channelStorageIni              = 0.0
readAvlChannelStorageIni       = 0.0

avgDischargeLongIni            = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/avgDischargeLong_1960-12-31.map
m2tDischargeLongIni            = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/m2tDischargeLong_1960-12-31.map
avgBaseflowLongIni             = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/avgBaseflowLong_1960-12-31.map
riverbedExchangeIni            = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/riverbedExchange_1960-12-31.map
avgLakeReservoirInflowShortIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/avgLakeReservoirInflowShort_1960-12-31.map
avgLakeReservoirOutflowLongIni = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/avgLakeReservoirOutflowLong_1960-12-31.map
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = None
#
# other initial conditions (optional):
avgDischargeShortIni           = /scratch/edwin/input/initial_conditions/05min/2014_10_17/two_layers_with_demand_one_degree_zonation_cruts3.21-era40-eraInt_5arcmin_but_30minArno/avgDischargeShort_1960-12-31.map


[reportingOptions]
# output files that will be written in the disk in netcdf files:
outDailyTotNC = discharge,surfaceWaterStorage
outMonthTotNC = totalEvaporation,nonIrrWaterConsumption,nonIrrReturnFlow,gwRecharge,surfaceWaterAbstraction,nonFossilGroundWaterAbstraction,otherWaterSourceAbstraction,totalAbstraction
outMonthAvgNC = discharge,totalWaterStorageThickness,totalEvaporation,nonIrrWaterConsumption,nonIrrReturnFlow,fracSurfaceWaterAllocation,fracNonFossilGroundwaterAllocation,fracOtherWaterSourceAllocation,totalFracWaterSourceAllocation,surfaceWaterStorage
outMonthEndNC = satDegUpp,satDegLow,storUppTotal,storLowTotal,storGroundwater
outAnnuaTotNC = totalEvaporation
outAnnuaAvgNC = discharge,totalWaterStorageThickness,temperature,gwRecharge,totalEvaporation,nonIrrWaterConsumption,nonIrrReturnFlow
outAnnuaEndNC = None
              

