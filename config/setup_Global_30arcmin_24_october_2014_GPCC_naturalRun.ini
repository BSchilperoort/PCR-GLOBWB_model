[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
inputDir = /data/hydroworld/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap = CLONEMAPFILES
cloneMap = others/Global/Global_CloneMap_30min.map 

# The area/landmask of interest:
#~ landmask = LANDMASKFILES
landmask = None
# If None, area/landmask is limited for cells with ldd value. 

# Set the output directory in an absolute path.
#~ outputDir = OUTPUTDIRECTORY
outputDir = /scratch/edwin/ref_run_30min_gpcc_24_oct_2014_natural_run/

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output
description = test version (by Edwin H. Sutanudjaja) 

startTime = 1960-01-01
endTime   = 2010-12-31
# Format: YYYY-MM-DD
timeStep = 1.0
timeStepUnit = day 
# PS: The current model still runs of the daily time step.

# spinning up options: 
# Note: for the purpose of DA, there should be no SpinUp 
maxSpinUpsInYears = 20
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = /scratch/edwin/input/forcing/edwin_gpcc_merged_1958_to_2010/gpcc-v6_era-40-era-interim_daily_precipitation_1958_to_2010.nc
temperatureNC   = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_temperature_1958_to_2010.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Input
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC  = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_referencePotET_1958_to_2010.nc

[meteoDownscalingOptions]

downscalePrecipitation  = None
downscaleTemperature    = None
downscaleReferenceETPot = None

# downscaling (based on the digital elevation model):
# The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells. 
meteoDownscaleIds = None
highResolutionDEM = None

# lapse rates:
temperLapseRateNC = None
precipLapseRateNC = None

# downscaling criter
temperatCorrelNC  = None
precipitCorrelNC  = None 

# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):
smoothingWindowsLength = 0

[landSurfaceOptions]
debugWaterBalance = True

numberOfUpperSoilLayers = 2

topographyNC      = PCRGLOBWB20/input30min/landSurface/topo/topoProperties.nc
soilPropertiesNC  = PCRGLOBWB20/input30min/landSurface/soil/soilProperties.nc

includeIrrigation = False
# if True, there are four land cover types defined: forest,grassland,irrPaddy,irrNonPaddy
# if False, two (natural) land cover types defined: forest,grassland

# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
#~ historicalIrrigationArea = None
historicalIrrigationArea = PCRGLOBWB20/input30min/landSurface/waterDemand/irrigated_areas/irrigationArea30ArcMin.nc

includeDomesticWaterDemand = False
includeIndustryWaterDemand = False

domesticWaterDemandFile = PCRGLOBWB20/input30min/landSurface/waterDemand/domesticWaterDemand30ArcMin.nc
industryWaterDemandFile = PCRGLOBWB20/input30min/landSurface/waterDemand/industryWaterDemand30ArcMin.nc

limitAbstraction = False

# zone IDs (scale) at which ground- surface-water allocation is performed  
allocationSegmentsForGroundSurfaceWater = None
#~ allocationSegmentsForGroundSurfaceWater = others/irrigationZones/one_arc_degree/uniqueIds60min.nom.map

[forestOptions]
name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/forest/forestProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/forest/Global_CropCoefficientKc-Forest_30min.nc
interceptCapNC    = PCRGLOBWB20/input30min/landCover/forest/interceptCapInputForest366days.nc
coverFractionNC   = PCRGLOBWB20/input30min/landCover/forest/coverFractionInputForest366days.nc

# initial conditions:
interceptStorIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/interceptStor_forest_1960-12-31.map
snowCoverSWEIni  = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/snowCoverSWE_forest_1960-12-31.map
snowFreeWaterIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/snowFreeWater_forest_1960-12-31.map
topWaterLayerIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/topWaterLayer_forest_1960-12-31.map
storUppIni       = 0.0
storLowIni       = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/storLow_forest_1960-12-31.map
interflowIni     = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/interflow_forest_1960-12-31.map

[grasslandOptions]
name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/grassland/grasslandProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/grassland/Global_CropCoefficientKc-Grassland_30min.nc
interceptCapNC    = PCRGLOBWB20/input30min/landCover/grassland/interceptCapInputGrassland366days.nc
coverFractionNC   = PCRGLOBWB20/input30min/landCover/grassland/coverFractionInputGrassland366days.nc

# initial conditions:
interceptStorIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/interceptStor_grassland_1960-12-31.map
snowCoverSWEIni  = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/snowCoverSWE_grassland_1960-12-31.map
snowFreeWaterIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/snowFreeWater_grassland_1960-12-31.map
topWaterLayerIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/topWaterLayer_grassland_1960-12-31.map
storUppIni       = 0.0
storLowIni       = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/storLow_grassland_1960-12-31.map
interflowIni     = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/interflow_grassland_1960-12-31.map

[irrPaddyOptions]
name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/irrPaddy/paddyProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.2

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc

# initial conditions:
interceptStorIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/interceptStor_irrPaddy_1960-12-31.map
snowCoverSWEIni  = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/snowCoverSWE_irrPaddy_1960-12-31.map
snowFreeWaterIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/snowFreeWater_irrPaddy_1960-12-31.map
topWaterLayerIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/topWaterLayer_irrPaddy_1960-12-31.map
storUppIni       = 0.0
storLowIni       = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/storLow_irrPaddy_1960-12-31.map
interflowIni     = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/interflow_irrPaddy_1960-12-31.map

[irrNonPaddyOptions]
name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/irrNonPaddy/nonPaddyProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.5

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:
interceptStorIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/interceptStor_irrNonPaddy_1960-12-31.map
snowCoverSWEIni  = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/snowCoverSWE_irrNonPaddy_1960-12-31.map
snowFreeWaterIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/snowFreeWater_irrNonPaddy_1960-12-31.map
topWaterLayerIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/topWaterLayer_irrNonPaddy_1960-12-31.map
storUppIni       = 0.0
storLowIni       = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/storLow_irrNonPaddy_1960-12-31.map
interflowIni     = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/interflow_irrNonPaddy_1960-12-31.map

[groundwaterOptions]
debugWaterBalance = True

groundwaterPropertiesNC = PCRGLOBWB20/input30min/groundwater/groundwaterProperties.nc

# minimum value for groundwater recession coefficient (day-1)
minRecessionCoeff = 1.0e-4

# initial condition:
storGroundwaterIni = initial_conditions/ref_run_30min_cru_era40-eraInt_05_aug_2014/states/storGroundwater_1960-12-31.map

[routingOptions]
debugWaterBalance = True

lddMap      = PCRGLOBWB20/input30min/routing/lddsound_30min.map
cellAreaMap = PCRGLOBWB20/input30min/routing/cellarea30min.map
gradient    = PCRGLOBWB20/input30min/routing/Global_ChannelGradient-RVB_30min.map

# manning coefficient
manningsN   = 0.04

# constant channel width (optional)
constantChannelWidth = None

# minimum channel width (optional)
minimumChannelWidth  = None

routingMethod = accuTravelTime
# Options are kinematicWave, simplifiedKinematicWave and accuTravelTime

# option for maximum length of a sub time step in seconds (optional and only used if kinematicWave is used)
# - Note that too long sub time step may create water balance errors.
# - Default values: 3600 seconds for 30 arcmin ; 720 seconds for 5 arcmin
#~ maxiumLengthOfSubTimeStep = 3600.
#~ maxiumLengthOfSubTimeStep = 720.

# lake and reservoir parameters
waterBodyInputNC = PCRGLOBWB20/input30min/routing/reservoirs/fromRensJune2013/reservoirparameterization/waterBodies30min.nc
onlyNaturalWaterBodies = True

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = PCRGLOBWB20/input30min/routing/cropCoefficientForOpenWater.nc
minCropWaterKC         = 0.20

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = 0.0
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
channelStorageIni              = 0.0
readAvlChannelStorageIni       = 0.0
avgDischargeLongIni            = 0.0
m2tDischargeLongIni            = 0.0
avgBaseflowLongIni             = 0.0
riverbedExchangeIni            = 0.0
avgLakeReservoirInflowShortIni = 0.0
avgLakeReservoirOutflowLongIni = 0.0
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = None
#
# other initial conditions (optional):
avgDischargeShortIni           = 0.0


[reportingOptions]
# output files that will be written in the disk in netcdf files:
outDailyTotNC = discharge,storGroundwater
outMonthTotNC = totalEvaporation,nonIrrWaterConsumption,nonIrrReturnFlow,gwRecharge,surfaceWaterAbstraction,nonFossilGroundWaterAbstraction,otherWaterSourceAbstraction,totalAbstraction
outMonthAvgNC = discharge,accuBaseflow,storGroundwater,totalWaterStorageThickness,nonIrrWaterConsumption,nonIrrReturnFlow,fracSurfaceWaterAllocation,fracNonFossilGroundwaterAllocation,fracOtherWaterSourceAllocation,totalFracWaterSourceAllocation,surfaceWaterStorage
outMonthEndNC = satDegUpp,satDegLow,storUppTotal,storLowTotal,storGroundwater
outAnnuaTotNC = totalEvaporation,accuBaseflow
outAnnuaAvgNC = discharge,totalWaterStorageThickness,gwRecharge,totalEvaporation,accuBaseflow
outAnnuaEndNC = None
