[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories and files will be relative to this.
inputDir    = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/

# Set the pcrglobwb output directory in an absolute path.
outputDir    = /scratch/depfg/sutan101/pcrglobwb_output_africa_using_subdomains/version_2020-10-15/clone_06_senegal_etc/

#~ sutan101@node039.cluster:/scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/cloneMaps/version_2020-10-XX$ ls -lah
#~ total 3.7G
#~ drwxr-xr-x 11 sutan101 depfg   30 Oct 15 22:00 .
#~ drwxr-xr-x  3 sutan101 depfg    1 Oct 14 15:16 ..
#~ -rw-r--r--  1 sutan101 depfg  116 Oct 14 15:17 SOURCE.TXT
#~ drwxr-xr-x  2 sutan101 depfg    3 Oct  8 23:23 clone_01_south_africa_etc
#~ drwxr-xr-x  2 sutan101 depfg    3 Oct  8 23:53 clone_02_nile_etc
#~ drwxr-xr-x  2 sutan101 depfg    3 Oct  9 15:07 clone_03_algeria_libya_etc
#~ drwxr-xr-x  2 sutan101 depfg    6 Oct 14 20:09 clone_04_egypt_to_middle_east_etc
#~ drwxr-xr-x  2 sutan101 depfg    3 Oct  9 15:53 clone_05_east_africa_to_middle_east_etc
#~ drwxr-xr-x  2 sutan101 depfg    3 Oct  9 16:24 clone_06_senegal_etc
#~ dr-xr-xr-x  2 sutan101 depfg    3 Oct 10 23:06 clone_07_niger_etc
#~ drwxr-xr-x  2 sutan101 depfg    3 Oct 10 23:23 clone_08_congo_etc
#~ drwxr-xr-x  2 sutan101 depfg    3 Oct 11 00:04 clone_09_east_africa_to_madagascar_etc
#~ -r--r--r--  1 sutan101 depfg 7.6M Oct  1 01:59 clonemap_1.map
#~ -r--r--r--  1 sutan101 depfg 8.7M Oct  1 01:59 clonemap_2.map
#~ -r--r--r--  1 sutan101 depfg  16M Oct  1 02:00 clonemap_3.map
#~ -r--r--r--  1 sutan101 depfg 9.2M Oct  1 02:01 clonemap_4.map
#~ -r--r--r--  1 sutan101 depfg  16M Oct  1 02:02 clonemap_5.map	
#~ -r--r--r--  1 sutan101 depfg 8.8M Oct  1 02:03 clonemap_6.map
#~ -r--r--r--  1 sutan101 depfg  12M Oct  1 02:04 clonemap_7.map
#~ -r--r--r--  1 sutan101 depfg  12M Oct  1 02:05 clonemap_8.map
#~ -r--r--r--  1 sutan101 depfg  14M Oct  1 02:05 clonemap_9.map
#~ -r--r--r--  1 sutan101 depfg 3.5G Oct  1 02:18 global_landmask_all.map
#~ -r--r--r--  1 sutan101 depfg 7.6M Oct  1 01:59 mask_1.map
#~ -r--r--r--  1 sutan101 depfg 8.7M Oct  1 02:00 mask_2.map
#~ -r--r--r--  1 sutan101 depfg  16M Oct  1 02:01 mask_3.map
#~ -r--r--r--  1 sutan101 depfg 9.2M Oct  1 02:02 mask_4.map
#~ -rw-r--r--  1 sutan101 depfg 4.9M Oct 14 20:09 mask_4_adjusted.map
#~ -r--r--r--  1 sutan101 depfg  16M Oct  1 02:02 mask_5.map
#~ -r--r--r--  1 sutan101 depfg 8.8M Oct  1 02:03 mask_6.map
#~ -r--r--r--  1 sutan101 depfg  12M Oct  1 02:04 mask_7.map
#~ -r--r--r--  1 sutan101 depfg  12M Oct  1 02:05 mask_8.map
#~ -r--r--r--  1 sutan101 depfg  14M Oct  1 02:06 mask_9.map


# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
cloneMap = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/cloneMaps/version_2020-10-XX/clonemap_6.map

# The area/landmask of interest:
# If None, area/landmask is limited for cells with ldd value. 
landmask = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/cloneMaps/version_2020-10-XX/mask_6.map


# TODO/FIXME: Check whether the current landmask excludes some parts of lakes located in the border. Note that while making new landmask, please also consider the extent of your forcing (in order to get rid off missing values of forcing that can lead to always-zero temperature cells, and therefore unrealistic snow). 

#~ # clone and landmask maps for testing
#~ cloneMap    = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30sec/cloneMaps/tanzania-1deg-clone-mask-for-test_multiple-resolutions/mask_tanzania_small_30sec.map
#~ landmask    = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30sec/cloneMaps/tanzania-1deg-clone-mask-for-test_multiple-resolutions/mask_tanzania_small_30sec.map


# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output (not coupled to MODFLOÓ§W), with human factors (non-natural)
description = by Edwin H. Sutanudjaja (contact: e.h.sutanudjaja@uu.nl), PCR-GLOBWB run with human factors (non-natural) at 30 arcsec resolution


startTime = 1957-01-01
endTime   = 2015-12-31
# Format: YYYY-MM-DD ; The model runs on daily time step.


# spinning up options:
maxSpinUpsInYears = 10
minConvForSoilSto = 0.0
minConvForGwatSto = 0.0
minConvForChanSto = 0.0
minConvForTotlSto = 0.0

# option/directory for saving the spin-up directory 
spinUpOutputDir = True


[meteoOptions]

#~ # Set the forcing temperature and precipitation files (relative to inputDir)
#~ precipitationNC = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30min/meteo/forcing/daily_precipitation_cruts321_era-40_era-interim_1958-2010_cruts324_era-interim_2011_to_2015.nc
#~ temperatureNC   = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30min/meteo/forcing/daily_temperature_cruts321_era-40_era-interim_1958-2010_cruts324_era-interim_2011_to_2015.nc

#~ # Method to calculate referencePotETP (reference potential evaporation+transpiration)
#~ # options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
#~ referenceETPotMethod = Input
#~ refETPotFileNC  = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30min/meteo/forcing/daily_referencePotET_cruts321_era-40_era-interim_1958-2010_cruts324_era-interim_2011_to_2015.nc


#~ (pcrglobwb_python3) sutan101@node039.cluster:/scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30min/meteo/forcing_extended_with_climatology$ ls -lah daily_*.nc
#~ -rw-r--r-- 1 sutan101 depfg 21G Oct 14 15:18 daily_precipitation_cruts321_era-40_era-interim_1958-2010_cruts324_era-interim_2011_to_2015_with_climatology_on_1957.nc
#~ -rw-r--r-- 1 sutan101 depfg 21G Oct 14 15:14 daily_referencePotET_cruts321_era-40_era-interim_1958-2010_cruts324_era-interim_2011_to_2015_with_climatology_on_1957.nc
#~ -rw-r--r-- 1 sutan101 depfg 21G Oct 14 15:15 daily_temperature_cruts321_era-40_era-interim_1958-2010_cruts324_era-interim_2011_to_2015_with_climatology_on_1957.nc

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30min/meteo/forcing_extended_with_climatology/daily_precipitation_cruts321_era-40_era-interim_1958-2010_cruts324_era-interim_2011_to_2015_with_climatology_on_1957.nc
temperatureNC   = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30min/meteo/forcing_extended_with_climatology/daily_temperature_cruts321_era-40_era-interim_1958-2010_cruts324_era-interim_2011_to_2015_with_climatology_on_1957.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
referenceETPotMethod = Input
refETPotFileNC  = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30min/meteo/forcing_extended_with_climatology/daily_referencePotET_cruts321_era-40_era-interim_1958-2010_cruts324_era-interim_2011_to_2015_with_climatology_on_1957.nc


[meteoDownscalingOptions]
                                                                                                                                        
downscalePrecipitation  = False                                                                                                                                   
downscaleTemperature    = True                                                                                                                                  
downscaleReferenceETPot = False                                                                                                                                   
   
# downscaling (based on the digital elevation model):                                                                                                            
#~ highResolutionDEM    = global_30sec/landSurface/topography/global_merit_dem_30sec/global_merit_dem_30sec.map
highResolutionDEM       = global_30sec/landSurface/topography/global_merit_dem_30sec/global_merit_dem_30sec_correct_lat.nc

# The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells.                                                    
meteoDownscaleIds       = global_05min/meteo/downscaling_from_30min/uniqueIds_30min.map                                                                      
#~ meteoDownscaleIds    = global_30sec/meteo/downscaling_from_150sec/unique_ids_150sec.map
#~ /rds/general/user/esutanud/ephemeral/data/pcrglobwb_input_arise/develop/pcrglobwb2_input/global_30sec/meteo/downscaling_from_150sec/unique_ids_150sec.map

# lapse rates:                                                                                                                                                   
temperLapseRateNC = global_05min/meteo/downscaling_from_30min/temperature_slope.nc                                                                     
precipLapseRateNC = global_05min/meteo/downscaling_from_30min/precipitation_slope.nc                                                                   
                                                                                                                                                                 
# downscaling criteria (TODO: remove these):                                                                                                                     
temperatCorrelNC  = global_05min/meteo/downscaling_from_30min/temperature_correl.nc                                                                     
precipitCorrelNC  = global_05min/meteo/downscaling_from_30min/precipitation_correl.nc                                                                   
                                                                                                                                                                 
# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):                                                                      
smoothingWindowsLength = 0


[landSurfaceOptions]

debugWaterBalance = True

numberOfUpperSoilLayers = 2

# topography parameters
# - they are used for all land cover types, unless they are are defined in certain land cover type options 
#   (e.g. different/various soil types for agriculture areas)  

#~ CHANGE_THIS
topographyNC  = /scratch/depfg/sutan101/floodplain_30arcsec/africa_version_202010XX/clone_06_senegal_etc/africa_topography_parameters_30sec_october_2020.nc


soilPropertiesNC     = None
# - if soilPropertiesNC = None, the following soil parameters will be used
#
#~ # -- files on cartesius:  /scratch-shared/edwinhs/soil_dsmw/source_from_speedy-rapid/soil/v06Jul2013
firstStorDepth       = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/layerDepth_average_1_africa_30sec.nc
secondStorDepth      = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/layerDepth_average_2_africa_30sec.nc
soilWaterStorageCap1 = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/WHC_average_1_africa_30sec.nc
soilWaterStorageCap2 = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/WHC_average_2_africa_30sec.nc
airEntryValue1       = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/psiAir_average_1_africa_30sec.nc
airEntryValue2       = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/psiAir_average_2_africa_30sec.nc
poreSizeBeta1        = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/BCH_average_1_africa_30sec.nc
poreSizeBeta2        = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/BCH_average_2_africa_30sec.nc
resVolWC1            = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/vmcRes_average_1_africa_30sec.nc
resVolWC2            = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/vmcRes_average_2_africa_30sec.nc
satVolWC1            = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/vmcSat_average_1_africa_30sec.nc
satVolWC2            = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/vmcSat_average_2_africa_30sec.nc
KSat1                = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/kSat_average_1_africa_30sec.nc
KSat2                = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa/filled_30sec/kSat_average_2_africa_30sec.nc
#
percolationImp      = /scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/dsmw/global/soil/v06Jul2013/West_ImpededDrainage_permafrost-ALL_DSMW_30sec.map
# TODO: Update this with SoilGrids depth to the bed rock

#~ sutan101@gpu039.cluster:/scratch/depfg/sutan101/data/pcrglobwb_soil_parameterization/soilgrids/africa$ ls -lah
#~ total 5.7G
#~ drwxr-xr-x 2 sutan101 depfg   32 Jun 24 16:50 .
#~ drwxr-xr-x 4 sutan101 depfg    2 Aug 25 23:49 ..
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 BCH_average_1_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:36 BCH_average_1_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 BCH_average_2_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:38 BCH_average_2_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 WHCFC_average_1_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:37 WHCFC_average_1_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 WHCFC_average_2_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:39 WHCFC_average_2_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 WHC_average_1_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:36 WHC_average_1_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 WHC_average_2_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:38 WHC_average_2_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 kSat_average_1_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:36 kSat_average_1_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 kSat_average_2_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:38 kSat_average_2_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 layerDepth_average_1_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:36 layerDepth_average_1_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 layerDepth_average_2_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:38 layerDepth_average_2_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 psiAir_average_1_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:36 psiAir_average_1_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 psiAir_average_2_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:38 psiAir_average_2_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 vmcRes_average_1_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:36 vmcRes_average_1_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 vmcRes_average_2_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:38 vmcRes_average_2_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 vmcSat_average_1_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:37 vmcSat_average_1_africa_1km.nc
#~ -rw-r--r-- 1 sutan101 depfg 2.3M Jun 25 18:39 vmcSat_average_2_africa_10km.nc
#~ -rw-r--r-- 1 sutan101 depfg 358M Jun 25 18:39 vmcSat_average_2_africa_1km.nc

includeIrrigation = True

#~ # netcdf time series for historical expansion of irrigation areas (unit: hectares). 
#~ # Note: The resolution of this map must be consisten with the resolution of cellArea. 
#~ historicalIrrigationArea = global_05min/waterUse/irrigation/irrigated_areas/irrigationArea05ArcMin.nc
#~ # NOT USED


# land cover classes
landCoverTypes = forest,grassland,irrPaddy,irrNonPaddy
noLandCoverFractionCorrection = False


# a pcraster map/value defining irrigation efficiency (dimensionless) - optional
irrigationEfficiency     = global_30min/waterUse/irrigation/irrigation_efficiency/efficiency.nc


includeDomesticWaterDemand  = True
includeIndustryWaterDemand  = True
includeLivestockWaterDemand = True


# domestic, industrial and livestock water demand data (unit must be in m.day-1)
domesticWaterDemandFile  = global_05min/waterUse/waterDemand/domestic/domestic_water_demand_version_april_2015.nc
industryWaterDemandFile  = global_05min/waterUse/waterDemand/industry/industry_water_demand_version_april_2015.nc
livestockWaterDemandFile = global_05min/waterUse/waterDemand/livestock/livestock_water_demand_version_april_2015.nc


# desalination water supply (maximum/potential/capacity)
desalinationWater = global_05min/waterUse/desalination/desalination_water_version_april_2015.nc


# zone IDs (scale) at which allocations of groundwater and surface water (as well as desalinated water) are performed  
allocationSegmentsForGroundSurfaceWater    = global_05min/waterUse/abstraction_zones/abstraction_zones_60min_05min.nc

# pcraster maps defining the partitioning of groundwater - surface water source 
#
# - predefined surface water - groundwater partitioning for irrigation demand (e.g. based on Siebert, Global Map of Irrigation Areas version 5)
irrigationSurfaceWaterAbstractionFractionData           = global_05min/waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_SWFRAC.nc
# -- quality map
irrigationSurfaceWaterAbstractionFractionDataQuality    = global_05min/waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_QUAL.nc
#
# - threshold values defining the preference for surface water source for irrigation purpose
# -- treshold to maximize surface water irrigation use (cells with irrSurfaceWaterAbstractionFraction above this will prioritize irrigation surface water use)
treshold_to_maximize_irrigation_surface_water           = 0.50
# -- treshold to minimize fossil water withdrawal for irrigation (cells with irrSurfaceWaterAbstractionFraction below this have no fossil withdrawal for irrigation)
treshold_to_minimize_fossil_groundwater_irrigation      = 0.70
#
# - predefined surface water - groundwater partitioning for non irrigation demand (e.g. based on McDonald, 2014)
maximumNonIrrigationSurfaceWaterAbstractionFractionData = global_30min/waterUse/source_partitioning/surface_water_fraction_for_non_irrigation/max_city_sw_fraction.nc


# option to skip extrapolation
noParameterExtrapolation = True


[forestOptions]

name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2

cropCoefficientNC = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/netcdf/tall_crop_coefficient.nc
interceptCapNC    = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/netcdf/tall_intercept_capacity.nc
coverFractionNC   = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/netcdf/tall_cover_fraction.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
#
#~ # - default parameters of PCR-GLOBWB 
#~ fracVegCover      = global_05min/landSurface/landCover/naturalTall/vegf_tall.nc
#~ minSoilDepthFrac  = global_30min/landSurface/landCover/naturalTall/minf_tall_permafrost.nc
#~ maxSoilDepthFrac  = global_30min/landSurface/landCover/naturalTall/maxf_tall.nc
#~ rootFraction1     = global_05min/landSurface/landCover/naturalTall/rfrac1_tall.nc
#~ rootFraction2     = global_05min/landSurface/landCover/naturalTall/rfrac2_tall.nc	
#~ maxRootDepth      = 1.0
#
# - high resolution version 
fracVegCover      = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/vegf_tall.map
minSoilDepthFrac  = 0.99
maxSoilDepthFrac  = 1.01
rootFraction1     = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/rfrac1_tall.map
rootFraction2     = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/rfrac2_tall.map	
maxRootDepth      = 1.0
#
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

#~ # initial conditions:
#~ interceptStorIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/interceptStor_forest_1981-12-31.map
#~ snowCoverSWEIni  = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/snowCoverSWE_forest_1981-12-31.map
#~ snowFreeWaterIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/snowFreeWater_forest_1981-12-31.map
#~ topWaterLayerIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/topWaterLayer_forest_1981-12-31.map
#~ storUppIni       = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/storUpp_forest_1981-12-31.map
#~ storLowIni       = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/storLow_forest_1981-12-31.map
#~ interflowIni     = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/interflow_forest_1981-12-31.map

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0


noParameterExtrapolation = True


[grasslandOptions]

name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2

cropCoefficientNC = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/netcdf/short_crop_coefficient.nc
interceptCapNC    = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/netcdf/short_intercept_capacity.nc
coverFractionNC   = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/netcdf/short_cover_fraction.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following values:
#
#~ # - default parameters of PCR-GLOBWB 
#~ fracVegCover      = global_05min/landSurface/landCover/naturalShort/vegf_short.nc
#~ minSoilDepthFrac  = global_30min/landSurface/landCover/naturalShort/minf_short_permafrost.nc
#~ maxSoilDepthFrac  = global_30min/landSurface/landCover/naturalShort/maxf_short.nc
#~ rootFraction1     = global_05min/landSurface/landCover/naturalShort/rfrac1_short.nc
#~ rootFraction2     = global_05min/landSurface/landCover/naturalShort/rfrac2_short.nc	
#~ maxRootDepth      = 0.5
#
# - high resolution version 
fracVegCover      = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/vegf_short.map
minSoilDepthFrac  = 0.99
maxSoilDepthFrac  = 1.01
rootFraction1     = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/rfrac1_short.map
rootFraction2     = /scratch/depfg/sutan101/data/pcrglobwb_landcover_africa/africa/africa_clone_30sec/rfrac2_short.map	
maxRootDepth      = 0.5
#
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

#~ # initial conditions:
#~ interceptStorIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/interceptStor_grassland_1981-12-31.map
#~ snowCoverSWEIni  = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/snowCoverSWE_grassland_1981-12-31.map
#~ snowFreeWaterIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/snowFreeWater_grassland_1981-12-31.map
#~ topWaterLayerIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/topWaterLayer_grassland_1981-12-31.map
#~ storUppIni       = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/storUpp_grassland_1981-12-31.map
#~ storLowIni       = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/storLow_grassland_1981-12-31.map
#~ interflowIni     = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/interflow_grassland_1981-12-31.map

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

noParameterExtrapolation = True


[irrPaddyOptions]

name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
#
#~ fracVegCover     = global_05min/landSurface/landCover/irrPaddy/fractionPaddy.nc
#~ minSoilDepthFrac = global_30min/landSurface/landCover/irrPaddy/minf_paddy_permafrost.nc
#~ maxSoilDepthFrac = global_30min/landSurface/landCover/irrPaddy/maxf_paddy.nc
#~ rootFraction1    = global_30min/landSurface/landCover/irrPaddy/rfrac1_paddy.nc
#~ rootFraction2    = global_30min/landSurface/landCover/irrPaddy/rfrac2_paddy.nc
#~ maxRootDepth     = 0.5
#
fracVegCover     = /scratch/depfg/sutan101/data/GFSAD1KCM/edwin_process/fractionPaddy_30sec.map
minSoilDepthFrac = 0.99
maxSoilDepthFrac = 1.01
rootFraction1    = global_30min/landSurface/landCover/irrPaddy/rfrac1_paddy.nc
rootFraction2    = global_30min/landSurface/landCover/irrPaddy/rfrac2_paddy.nc
maxRootDepth     = 0.5
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
cropDeplFactor   = 0.2
minInterceptCap  = 0.0002

cropCoefficientNC = global_30min/landSurface/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc

#~ # initial conditions:
#~ interceptStorIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/interceptStor_irrPaddy_1981-12-31.map
#~ snowCoverSWEIni  = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/snowCoverSWE_irrPaddy_1981-12-31.map
#~ snowFreeWaterIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/snowFreeWater_irrPaddy_1981-12-31.map
#~ topWaterLayerIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/topWaterLayer_irrPaddy_1981-12-31.map
#~ storUppIni       = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/storUpp_irrPaddy_1981-12-31.map
#~ storLowIni       = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/storLow_irrPaddy_1981-12-31.map
#~ interflowIni     = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/interflow_irrPaddy_1981-12-31.map

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

noParameterExtrapolation = True

[irrNonPaddyOptions]

name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
#
#~ fracVegCover     = global_05min/landSurface/landCover/irrNonPaddy/fractionNonPaddy.nc
#~ minSoilDepthFrac = global_30min/landSurface/landCover/irrNonPaddy/minf_nonpaddy_permafrost.nc
#~ maxSoilDepthFrac = global_30min/landSurface/landCover/irrNonPaddy/maxf_nonpaddy.nc
#~ rootFraction1    = global_30min/landSurface/landCover/irrNonPaddy/rfrac1_nonpaddy.nc
#~ rootFraction2    = global_30min/landSurface/landCover/irrNonPaddy/rfrac2_nonpaddy.nc
#~ maxRootDepth     = 1.0
#
fracVegCover     = /scratch/depfg/sutan101/data/GFSAD1KCM/edwin_process/fractionNonPaddy_30sec.map
minSoilDepthFrac = 0.99
maxSoilDepthFrac = 1.01
rootFraction1    = global_30min/landSurface/landCover/irrNonPaddy/rfrac1_nonpaddy.nc
rootFraction2    = global_30min/landSurface/landCover/irrNonPaddy/rfrac2_nonpaddy.nc
maxRootDepth     = 1.0
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
cropDeplFactor   = 0.5
minInterceptCap  = 0.0002

cropCoefficientNC = global_30min/landSurface/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

#~ # initial conditions:
#~ interceptStorIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/interceptStor_irrNonPaddy_1981-12-31.map
#~ snowCoverSWEIni  = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/snowCoverSWE_irrNonPaddy_1981-12-31.map
#~ snowFreeWaterIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/snowFreeWater_irrNonPaddy_1981-12-31.map
#~ topWaterLayerIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/topWaterLayer_irrNonPaddy_1981-12-31.map
#~ storUppIni       = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/storUpp_irrNonPaddy_1981-12-31.map
#~ storLowIni       = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/storLow_irrNonPaddy_1981-12-31.map
#~ interflowIni     = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/interflow_irrNonPaddy_1981-12-31.map

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

noParameterExtrapolation = True


[groundwaterOptions]

debugWaterBalance = True

groundwaterPropertiesNC = global_05min/groundwater/properties/groundwaterProperties5ArcMin.nc
# The file will contains specificYield (m3.m-3), kSatAquifer, recessionCoeff (day-1)
#
#~ recessionCoeff = global_30sec/groundwater/properties/recession_constant.map
#~ kSatAquifer    = global_30sec/groundwater/properties/conductivity_30sec_adjusted_edwin_m_per_day.map
#
recessionCoeff = /scratch/depfg/sutan101/data/pcrglobwb_gw_recession_coefficients/recession_coefficient_version_20200708_USE-THIS/30sec/recession_coefficient_30sec.map
kSatAquifer    = /scratch/depfg/sutan101/data/pcrglobwb_gw_recession_coefficients/recession_coefficient_version_20200708_USE-THIS/30sec/k_conductivity_aquifer_filled.map
specificYield  = /scratch/depfg/sutan101/data/pcrglobwb_gw_recession_coefficients/recession_coefficient_version_20200708_USE-THIS/30sec/specific_yield_aquifer_filled.map
#
# - minimum value for groundwater recession coefficient (day-1) 
minRecessionCoeff = 1.0e-4

# some options for constraining groundwater abstraction
limitFossilGroundWaterAbstraction      = True
estimateOfRenewableGroundwaterCapacity = 0.0
estimateOfTotalGroundwaterThickness    = global_05min/groundwater/aquifer_thickness_estimate/thickness_05min.nc
# minimum and maximum total groundwater thickness 
minimumTotalGroundwaterThickness       = 100.
maximumTotalGroundwaterThickness       = None

doNotExtrapolateThickness = True
noParameterExtrapolation  = True

# annual pumping capacity for each region (unit: billion cubic meter per year), should be given in a netcdf file
pumpingCapacityNC    = global_30min/waterUse/groundwater_pumping_capacity/regional_abstraction_limit.nc

# zonal IDs (scale) at which zonal allocation of groundwater is performed  
allocationSegmentsForGroundwater    = global_05min/waterUse/abstraction_zones/abstraction_zones_30min_05min.nc
#~ allocationSegmentsForGroundwater = False

#~ # initial conditions:
#~ storGroundwaterIni                        = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/storGroundwater_1981-12-31.map
#~ storGroundwaterFossilIni                  = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/storGroundwaterFossil_1981-12-31.map
#~ #
#~ # additional initial conditions for pumping behaviors
#~ avgNonFossilGroundwaterAllocationLongIni  = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/avgNonFossilGroundwaterAllocationLong_1981-12-31.map
#~ avgNonFossilGroundwaterAllocationShortIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/avgNonFossilGroundwaterAllocationShort_1981-12-31.map
#~ avgTotalGroundwaterAbstractionIni         = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/avgTotalGroundwaterAbstraction_1981-12-31.map
#~ avgTotalGroundwaterAllocationLongIni      = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/avgTotalGroundwaterAllocationLong_1981-12-31.map
#~ avgTotalGroundwaterAllocationShortIni     = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/avgTotalGroundwaterAllocationShort_1981-12-31.map
#~ #
#~ # additional initial conditions (needed only for MODFLOW run) 
#~ relativeGroundwaterHeadIni                = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/relativeGroundwaterHead_1981-12-31.map
#~ baseflowIni                               = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/baseflow_1981-12-31.map

# initial conditions:
storGroundwaterIni                        = 0.0
storGroundwaterFossilIni                  = 0.0
#
# additional initial conditions for pumping behaviors
avgNonFossilGroundwaterAllocationLongIni  = 0.0
avgNonFossilGroundwaterAllocationShortIni = 0.0
avgTotalGroundwaterAbstractionIni         = 0.0
avgTotalGroundwaterAllocationLongIni      = 0.0
avgTotalGroundwaterAllocationShortIni     = 0.0
#
# additional initial conditions (needed only for MODFLOW run) 
relativeGroundwaterHeadIni                = 0.0
baseflowIni                               = 0.0


[routingOptions]

debugWaterBalance = True

# drainage direction map
lddMap      = /scratch/depfg/sutan101/data/pcrglobwb_reservoir_and_lake_parameters/version_202005XX/30sec_africa_version_20200525/maps/netcdf_and_ldd/lddsound_30sec_africa_version_202005XX.map 


# cell area (unit: m2)
#~ cellAreaMap = global_30sec/routing/ldd_and_cell_area/cellsize30sec.map
cellAreaMap    = global_30sec/routing/ldd_and_cell_area/cellsize30sec_correct_lat.nc


# routing method:
routingMethod = accuTravelTime

# manning coefficient
manningsN   = 0.04

# Option for flood plain simulation
dynamicFloodPlain = True

# manning coefficient for floodplain
floodplainManningsN = 0.07


#~ # channel gradient
#~ gradient             = /scratch/depfg/sutan101/data/pcrglobwb_topography_and_channel_parameters/floodplain_30arcsec/africa_senegal_version_202009XX/map/channel_gradient.map

#~ # constant channel depth 
#~ constantChannelDepth = /scratch/depfg/sutan101/data/pcrglobwb_topography_and_channel_parameters/floodplain_30arcsec/africa_senegal_version_202009XX/map/bankfull_depth.map

#~ # constant channel width (optional)
#~ constantChannelWidth = /scratch/depfg/sutan101/data/pcrglobwb_topography_and_channel_parameters/floodplain_30arcsec/africa_senegal_version_202009XX/map/bankfull_width.map

#~ # minimum channel width (optional)
#~ minimumChannelWidth  = /scratch/depfg/sutan101/data/pcrglobwb_topography_and_channel_parameters/floodplain_30arcsec/africa_senegal_version_202009XX/map/bankfull_width.map

gradient             = /scratch/depfg/sutan101/data/pcrglobwb_gmglob_input/develop/global_30sec/routing/channel_properties/version_2020-09-XX/map/channel_gradient_correct_lat.nc
constantChannelDepth = /scratch/depfg/sutan101/data/pcrglobwb_gmglob_input/develop/global_30sec/routing/channel_properties/version_2020-09-XX/map/bankfull_depth_correct_lat.nc
constantChannelWidth = /scratch/depfg/sutan101/data/pcrglobwb_gmglob_input/develop/global_30sec/routing/channel_properties/version_2020-09-XX/map/bankfull_width_correct_lat.nc
minimumChannelWidth  = /scratch/depfg/sutan101/data/pcrglobwb_gmglob_input/develop/global_30sec/routing/channel_properties/version_2020-09-XX/map/bankfull_width_correct_lat.nc

#~ (pcrglobwb_python3) sutan101@gpu040.cluster:/scratch/depfg/sutan101/data/pcrglobwb_gmglob_input/develop/global_30sec/routing/channel_properties/version_2020-09-XX/map$ ls -lah *
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 11 21:34 bankfull_depth.map
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 14:20 bankfull_depth.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 14:21 bankfull_depth_correct_lat.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 11 21:34 bankfull_width.map
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 14:22 bankfull_width.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 14:23 bankfull_width_correct_lat.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 11 21:34 cellarea.map
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 15:26 cellarea.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 15:27 cellarea_correct_lat.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 11 21:34 channel_gradient.map
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 14:25 channel_gradient.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 14:26 channel_gradient_correct_lat.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 15:43 check_cellarea.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 15:05 check_dem_floodplain_to_minimum.nc
#~ -rw-r--r-- 1 sutan101 depfg 1.1K Sep 25 14:18 convert_to_nc.sh
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 11 21:34 dem_floodplain.map
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 14:28 dem_floodplain.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 14:29 dem_floodplain_correct_lat.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 11 21:34 dem_riverbed.map
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 14:30 dem_riverbed.nc
#~ -rw-r--r-- 1 sutan101 depfg 3.5G Sep 25 14:31 dem_riverbed_correct_lat.nc
#~ -rw-r--r-- 1 sutan101 depfg 890M Sep 11 21:34 ldd.map

# channel properties for flooding
bankfullCapacity     = None
# - If None, it will be estimated from (bankfull) channel depth (m) and width (m) 

# files for relative elevation (above minimum dem) 
relativeElevationLevels    = 0.0, 0.01, 0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.00
#~ relativeElevationFiles  = /scratch/depfg/sutan101/data/pcrglobwb_topography_and_channel_parameters/floodplain_30arcsec/africa_senegal_version_202009XX/map/dzRel%04d.map

#~ CHANGE_THIS
relativeElevationFiles     = /scratch/depfg/sutan101/floodplain_30arcsec/africa_version_202010XX/clone_06_senegal_etc/map/dzRel%04d.map

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = global_30min/routing/kc_surface_water/cropCoefficientForOpenWater.nc
minCropWaterKC         = 1.00


# lake and reservoir parameters
includeWaterBodies        = True
waterBodyInputNC          = /scratch/depfg/sutan101/data/pcrglobwb_reservoir_and_lake_parameters/version_202005XX/30sec_africa_version_20200525/maps/netcdf_and_ldd/lakes_and_reservoirs_30sec_africa_version_may_2020.nc
#~ fracWaterInp           = None
#~ waterBodyIds           = None
#~ waterBodyTyp           = None
#~ resMaxCapInp           = None
#~ resSfAreaInp           = None
onlyNaturalWaterBodies    = False


#~ # initial conditions:
#~ waterBodyStorageIni            = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/waterBodyStorage_1981-12-31.map
#~ channelStorageIni              = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/channelStorage_1981-12-31.map
#~ readAvlChannelStorageIni       = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/readAvlChannelStorage_1981-12-31.map
#~ avgDischargeLongIni            = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/avgDischargeLong_1981-12-31.map
#~ avgDischargeShortIni           = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/avgDischargeShort_1981-12-31.map
#~ m2tDischargeLongIni            = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/m2tDischargeLong_1981-12-31.map
#~ avgBaseflowLongIni             = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/avgBaseflowLong_1981-12-31.map
#~ riverbedExchangeIni            = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/riverbedExchange_1981-12-31.map
#~ #
#~ # initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
#~ subDischargeIni                = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/subDischarge_1981-12-31.map
#~ #
#~ avgLakeReservoirInflowShortIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/avgLakeReservoirInflowShort_1981-12-31.map
#~ avgLakeReservoirOutflowLongIni = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/avgLakeReservoirOutflowLong_1981-12-31.map
#~ #
#~ # number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
#~ timestepsToAvgDischargeIni     = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/africa_30sec/initialConditions/senegal_from_a_spinup_run_on_imperial_college_version_2020-09-XX/timestepsToAvgDischarge_1981-12-31.map
#~ # Note that: 
#~ # - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
#~ # - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
waterBodyStorageIni            = 0.0
channelStorageIni              = 0.0
readAvlChannelStorageIni       = 0.0
avgDischargeLongIni            = 0.0
avgDischargeShortIni           = 0.0
m2tDischargeLongIni            = 0.0
avgBaseflowLongIni             = 0.0
riverbedExchangeIni            = 0.0
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = 0.0
#
avgLakeReservoirInflowShortIni = 0.0
avgLakeReservoirOutflowLongIni = 0.0
#
# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = 0.0
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)


[reportingOptions]

# output files that will be written in the disk in netcdf files:
# - daily resolution
outDailyTotNC = discharge,totalRunoff,gwRecharge,totalGroundwaterAbstraction,surfaceWaterStorage,temperature,precipitation,referencePotET,satDegUpp,satDegLow,totalEvaporation
# - monthly resolution
outMonthTotNC = actualET,irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal,runoff,totalRunoff,baseflow,directRunoff,interflowTotal,totalGroundwaterAbstraction,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,precipitation,gwRecharge,surfaceWaterInf,referencePotET,totalEvaporation,totalPotentialEvaporation,totLandSurfaceActuaET,totalLandSurfacePotET,waterBodyActEvaporation,waterBodyPotEvaporation
outMonthAvgNC = discharge,temperature,dynamicFracWat,surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalActiveStorageThickness,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage,waterBodyStorage
outMonthEndNC = storGroundwater,storGroundwaterFossil,waterBodyStorage,channelStorage,totalWaterStorageThickness,totalActiveStorageThickness
# - annual resolution
outAnnuaTotNC = totalEvaporation,precipitation,gwRecharge,totalRunoff,baseflow,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,totalGroundwaterAbstraction,totalAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,runoff,actualET,irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,irrigationWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal,precipitation_at_irrigation,netLqWaterToSoil_at_irrigation,evaporation_from_irrigation,transpiration_from_irrigation,referencePotET
outAnnuaAvgNC = temperature,discharge,surfaceWaterStorage,waterBodyStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage,waterBodyStorage,fractionWaterBodyEvaporation,fractionTotalEvaporation,fracSurfaceWaterAllocation,fracDesalinatedWaterAllocation,gwRecharge
outAnnuaEndNC = surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness
# - monthly and annual maxima
outMonthMaxNC = channelStorage,dynamicFracWat,floodVolume,floodDepth,surfaceWaterLevel,discharge,totalRunoff
outAnnuaMaxNC = None

#~ # netcdf format and zlib setup
#~ formatNetCDF = NETCDF4
#~ zlib = True


