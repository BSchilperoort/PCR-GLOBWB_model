[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
inputDir = /data/hydroworld/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap = CLONEMAPFILES
cloneMap = ../../scratch/Patri/Static_data/australiaclone.map

# The area/landmask of interest:
#~ landmask = LANDMASKFILES
landmask = ../../scratch/Patri/Static_data/australiacatchment.map
# If None, area/landmask is limited for cells with ldd value. 

# Set the output directory in an absolute path.
#~ outputDir = OUTPUTDIRECTORY
outputDir = /home/lopez018/Model_Runs/Global_Data/2_layers/P_T_HamonAndDS_Bidgee/
cleanOutputDir = False

# Output in the netcdf format will be written to (relative to outputDir):
outputNCDir = netcdf/
#
# Temporary folder (relative to outputDir):
tmpDir = tmp/
#
# The directory for the log file is generated in the following directory (relative to outputDir): 
logFileDir = log/
cleanLogDir = True

log_level_console = INFO
log_level_file = DEBUG

# The python scripts used will be also copied to the following directory (relative to outputDir): 
backupScriptDir = scripts/
debugWaterBalance = True

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output
description = test version (by Edwin H. Sutanudjaja) 

startTime = 1979-01-01
endTime   = 1990-12-31
# Format: YYYY-MM-DD
timeStep = 1.0
timeStepUnit = day 
# PS: The current model still runs of the daily time step.

# spinning up options: 
# Note: for the purpose of DA, there should be no SpinUp 
maxSpinUpsInYears = 1
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

# The end model states after every (spinUp or real run) cycle will be
# saved into the following directory (if defined). 
# - The directory is relative to outputDir and teh end states will be 
#   saved as PCRaster maps. 
endStateDir = states/
cleanEndStateDir = True

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
temperatureNC   = /scratch/yoshi/eartH2Observe/climate_forcing_eartH2Observe_temperature_daily_1979_2012.nc4
precipitationNC = /scratch/yoshi/eartH2Observe/climate_forcing_eartH2Observe_precipitation_daily_1979_2012.nc4

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Hamon
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC  = None

[meteoDownscalingOptions]

downscalePrecipitation  = True
downscaleTemperature    = True
downscaleReferenceETPot = True

# downscaling (based on the digital elevation model):
# The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells. 
meteoDownscaleIds = PCRGLOBWB20/input5min/meteo/downscalingFrom30ArcMin/uniqueIds_30min.map
highResolutionDEM = PCRGLOBWB20/input5min/meteo/downscalingFrom30ArcMin/gtopo05min.map

# lapse rates:
temperLapseRateNC = PCRGLOBWB20/input5min/meteo/downscalingFrom30ArcMin/temperature_slope.nc
precipLapseRateNC = PCRGLOBWB20/input5min/meteo/downscalingFrom30ArcMin/precipitation_slope.nc

# downscaling criter
temperatCorrelNC  = PCRGLOBWB20/input5min/meteo/downscalingFrom30ArcMin/temperature_correl.nc
precipitCorrelNC  = PCRGLOBWB20/input5min/meteo/downscalingFrom30ArcMin/precipitation_correl.nc

# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):
smoothingWindowsLength = 0

[landSurfaceOptions]
debugWaterBalance = True

topographyNC     = PCRGLOBWB20/input5min/landSurface/topo/topoProperties5ArcMin.nc
soilPropertiesNC = PCRGLOBWB20/input5min/landSurface/soil/v03Jul2013/soilProperties5ArcMin.nc

clappAddCoeff   = 3.0
matricSuctionFC = 1.0
matricSuction50 = 3.33
matricSuctionWP = 156.0
maxGWCapRise    = 5.0

numberOfUpperSoilLayers = 2

includeIrrigation = True
# if True, there are four land cover types defined: forest,grassland,irrPaddy,irrNonPaddy
# if False, two (natural) land cover types defined: forest,grassland

# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
historicalIrrigationArea = ../../home/lopez018/Irrigated_Areas/irrigationArea05ArcMin_till2012.nc
#PCRGLOBWB20/input5min/landSurface/waterDemand/irrigated_areas/irrigationArea05ArcMin.nc

includeDomesticWaterDemand = True
includeIndustryWaterDemand = True

domesticWaterDemandFile = ../../home/lopez018/WaterDemand/domesticWaterDemand30ArcMin_till2012.nc
#PCRGLOBWB20/input30min/landSurface/waterDemand/domesticWaterDemand30ArcMin.nc
industryWaterDemandFile = ../../home/lopez018/WaterDemand/industryWaterDemand30ArcMin_till2012.nc
#PCRGLOBWB20/input30min/landSurface/waterDemand/industryWaterDemand30ArcMin.nc

limitAbstraction = False

# zone IDs (scale) at which ground- surface-water allocation is performed  
allocationSegmentsForGroundSurfaceWater = others/irrigationZones/one_arc_degree/uniqueIds60min.nom.map

[forestOptions]
name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

#~ landCoverMapsNC = PCRGLOBWB20/input5min/landCover/forest/forestProperties5ArcMin.nc
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover     = PCRGLOBWB20/input5min/landCover/forest/vegf_tall.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/forest/minf_tall_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/forest/maxf_tall.map
rootFraction1    = PCRGLOBWB20/input5min/landCover/forest/rfrac1_tall.map
rootFraction2    = PCRGLOBWB20/input5min/landCover/forest/rfrac2_tall.map	
maxRootDepth     = PCRGLOBWB20/input5min/landCover/forest/maxrootdepth_tall.map	

cropCoefficientNC = PCRGLOBWB20/input5min/landCover/forest/cropCoefficientForest.nc
interceptCapNC    = PCRGLOBWB20/input5min/landCover/forest/interceptCapInputForest.nc
coverFractionNC   = PCRGLOBWB20/input5min/landCover/forest/coverFractionInputForest.nc

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

[grasslandOptions]
name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

#~ landCoverMapsNC = PCRGLOBWB20/input5min/landCover/grassland/grasslandProperties5ArcMin.nc
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = PCRGLOBWB20/input5min/landCover/grassland/vegf_short.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/grassland/minf_short_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/grassland/maxf_short.map
rootFraction1    = PCRGLOBWB20/input5min/landCover/grassland/rfrac1_short.map
rootFraction2    = PCRGLOBWB20/input5min/landCover/grassland/rfrac2_short.map	
maxRootDepth     = PCRGLOBWB20/input5min/landCover/grassland/maxrootdepth_short.map	

cropCoefficientNC = PCRGLOBWB20/input5min/landCover/grassland/cropCoefficientGrassland.nc
interceptCapNC    = PCRGLOBWB20/input5min/landCover/grassland/interceptCapInputGrassland.nc
coverFractionNC   = PCRGLOBWB20/input5min/landCover/grassland/coverFractionInputGrassland.nc

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

[irrPaddyOptions]
name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = PCRGLOBWB20/input5min/landCover/irrigation/fractionPaddy.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrPaddy/minf_paddy_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrPaddy/maxf_paddy.map
rootFraction1    = PCRGLOBWB20/input30min/landCover/irrPaddy/rfrac1_paddy.map
rootFraction2    = PCRGLOBWB20/input30min/landCover/irrPaddy/rfrac2_paddy.map
maxRootDepth     = 0.5
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.2

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

[irrNonPaddyOptions]
name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = PCRGLOBWB20/input5min/landCover/irrigation/fractionNonPaddy.map
minSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrNonPaddy/minf_nonpaddy_permafrost.map
maxSoilDepthFrac = PCRGLOBWB20/input30min/landCover/irrNonPaddy/maxf_nonpaddy.map
rootFraction1    = PCRGLOBWB20/input30min/landCover/irrNonPaddy/rfrac1_nonpaddy.map
rootFraction2    = PCRGLOBWB20/input30min/landCover/irrNonPaddy/rfrac2_nonpaddy.map
maxRootDepth     = 1.0
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.5

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

[groundwaterOptions]
debugWaterBalance = True

groundwaterPropertiesNC = PCRGLOBWB20/input5min/groundwater/groundwaterProperties5ArcMin.nc

# initial condition:
storGroundwaterIni = 0.0

[routingOptions]
debugWaterBalance = True

lddMap      = PCRGLOBWB20/input5min/routing/lddsound_05min.map
cellAreaMap = PCRGLOBWB20/input5min/routing/cellsize05min.correct.map
gradient    = PCRGLOBWB20/input5min/routing/slope05min.map

routingMethod = accuTravelTime
# TODO: including kinematicWave

# manning coefficient:
manningsN = 0.04

# lake and reservoir parameters
waterBodyInputNC = ../../home/lopez018/WaterBodies/waterBodies5ArcMin_till2012.nc
#PCRGLOBWB20/input5min/routing/reservoirs/waterBodiesFinal_version15Sept2013/maps/waterBodies5ArcMin.nc

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = PCRGLOBWB20/input30min/routing/cropCoefficientForOpenWater.nc

# number of days (timesteps) that have been performed for spinning up routing module (i.e. waterBodyStorageIni, channelStorageIni, and avgChannelDischargeIni, etc.)
timestepsToAvgDischargeIni     = 0.0

# initial conditions:
channelStorageIni              = 0.0
readAvlChannelStorageIni       = 0.0
avgDischargeLongIni            = 0.0
m2tChannelDischargeLongIni     = 0.0
avgBaseflowLongIni             = 0.0
riverbedExchangeIni            = 0.0
avgLakeReservoirInflowShortIni = 0.0
avgLakeReservoirOutflowLongIni = 0.0
#
# other initial conditions (optional):
avgDischargeShortIni           = 0.0
avgSurfaceWaterInputLongIni    = 0.0

[reportingOptions]

# output files that will be written in the disk:
# in netcdf files:
outDailyTotNC = downscalePrecipitation,downscaleTemperature,downscaleReferenceETPot,precipitation,temperature,referencePotET
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None
