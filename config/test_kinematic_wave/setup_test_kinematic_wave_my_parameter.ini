[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
inputDir = /data/hydroworld/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap = /scratch/edwin/input/forcing/hyperhydro_wg1/EFAS/clone_maps/RhineMeuseHyperHydro30min.clone.map
#~ cloneMap = others/RhineMeuse/RhineMeuse30min.clone.map
#~ cloneMap = others/Global/Global_CloneMap_30min.map
cloneMap = others/Mississippi/Mississippi30min.clone.map

# The area/landmask of interest:
landmask = None
# If None, area/landmask is limited for cells with ldd value. 

# Set the output directory in an absolute path.
outputDir = /scratch/edwin/test_kinematic_wave_routing/Mississippi_my_parameter/

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB 2 output
description = test version (by Edwin H. Sutanudjaja) 

startTime = 1979-01-01
endTime   = 2010-12-31
# Format: YYYY-MM-DD ; The current model runs on the daily time step.

# spinning up options:
maxSpinUpsInYears = 0
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5
minConvForTotlSto = 0.5

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_precipitation_1958_to_2010.nc
temperatureNC   = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_temperature_1958_to_2010.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Input
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_referencePotET_1958_to_2010.nc


[landSurfaceOptions]
debugWaterBalance = True

numberOfUpperSoilLayers = 2

# soil and parameters
# - they are used for all land cover types, unless they are are defined in certain land cover type options 
#   (e.g. different/various soil types for agriculture areas)  
topographyNC      = PCRGLOBWB20/input30min/landSurface/topo/topoProperties.nc
soilPropertiesNC  = PCRGLOBWB20/input30min/landSurface/soil/soilProperties.nc

[forestOptions]

name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2

landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/forest/forestProperties.nc

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/forest/Global_CropCoefficientKc-Forest_30min.nc
interceptCapNC    = PCRGLOBWB20/input30min/landCover/forest/interceptCapInputForest366days.nc
coverFractionNC   = PCRGLOBWB20/input30min/landCover/forest/coverFractionInputForest366days.nc

# initial conditions:
interceptStorIni = /scratch/edwin/test_kinematic_wave/states/interceptStor_forest_1979-12-31.map
snowCoverSWEIni  = /scratch/edwin/test_kinematic_wave/states/snowCoverSWE_forest_1979-12-31.map
snowFreeWaterIni = /scratch/edwin/test_kinematic_wave/states/snowFreeWater_forest_1979-12-31.map
topWaterLayerIni = /scratch/edwin/test_kinematic_wave/states/topWaterLayer_forest_1979-12-31.map
storUppIni       = /scratch/edwin/test_kinematic_wave/states/storUpp_forest_1979-12-31.map
storLowIni       = /scratch/edwin/test_kinematic_wave/states/storLow_forest_1979-12-31.map
interflowIni     = /scratch/edwin/test_kinematic_wave/states/interflow_forest_1979-12-31.map

[grasslandOptions]

name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2

landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/grassland/grasslandProperties.nc

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/grassland/Global_CropCoefficientKc-Grassland_30min.nc
interceptCapNC    = PCRGLOBWB20/input30min/landCover/grassland/interceptCapInputGrassland366days.nc
coverFractionNC   = PCRGLOBWB20/input30min/landCover/grassland/coverFractionInputGrassland366days.nc

# initial conditions:
interceptStorIni = /scratch/edwin/test_kinematic_wave/states/interceptStor_grassland_1979-12-31.map
snowCoverSWEIni  = /scratch/edwin/test_kinematic_wave/states/snowCoverSWE_grassland_1979-12-31.map
snowFreeWaterIni = /scratch/edwin/test_kinematic_wave/states/snowFreeWater_grassland_1979-12-31.map
topWaterLayerIni = /scratch/edwin/test_kinematic_wave/states/topWaterLayer_grassland_1979-12-31.map
storUppIni       = /scratch/edwin/test_kinematic_wave/states/storUpp_grassland_1979-12-31.map
storLowIni       = /scratch/edwin/test_kinematic_wave/states/storLow_grassland_1979-12-31.map
interflowIni     = /scratch/edwin/test_kinematic_wave/states/interflow_grassland_1979-12-31.map

[groundwaterOptions]

debugWaterBalance = True

groundwaterPropertiesNC = PCRGLOBWB20/input30min/groundwater/groundwaterProperties.nc

# minimum value for groundwater recession coefficient (day-1)
minRecessionCoeff = 1.0e-4

# initial conditions:
storGroundwaterIni = /scratch/edwin/test_kinematic_wave/states/storGroundwater_1979-12-31.map
storGroundwaterFossilIni = 0.0
#
avgNonFossilGroundwaterAllocationLongIni  = 0.0
avgNonFossilGroundwaterAllocationShortIni = 0.0
avgTotalGroundwaterAbstractionIni         = 0.0
avgTotalGroundwaterAllocationLongIni      = 0.0
avgTotalGroundwaterAllocationShortIni     = 0.0

[routingOptions]

debugWaterBalance = True

lddMap      = PCRGLOBWB20/input30min/routing/lddsound_30min.map
cellAreaMap = PCRGLOBWB20/input30min/routing/cellarea30min.map
gradient    = PCRGLOBWB20/input30min/routing/Global_ChannelGradient-RVB_30min.map

# manning coefficient
manningsN   = 0.04

# manning coefficient for floodplain
floodplainManningsN= 0.10

# routing method: (options are kinematicWave, simplifiedKinematicWave and accuTravelTime)
routingMethod = kinematicWave

# Option for flood plain simulation
dynamicFloodPlain = True

# constant channel width (optional)
#~ constantChannelWidth = None
constantChannelWidth = /scratch/edwin/floodplain_30arcmin_world_final/bankfull_width.map

# minimum channel width (optional)
#~ minimumChannelWidth  = None
minimumChannelWidth  = /scratch/edwin/floodplain_30arcmin_world_final/bankfull_width.map

# constant channel depth 
constantChannelDepth = /scratch/edwin/floodplain_30arcmin_world_final/bankfull_depth.map

# Options for floodplain routing module  - WE ALSO WANT TO DERIVE THIS
relativeElevationFiles  = /home/sutan101/data/routing_parameters/rens_niko_routing_parameters/maps/elev%04d.map
relativeElevationLevels = 0.0, 0.01, 0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.00
# TODO: Define a netcdf file 

# Channel properties for flooding       - WE ALSO WANT TO DERIVE THIS
bankfullCapacity = None
#~ bankfullCapacity = /home/sutan101/data/rens_niko_routing_parameters/maps/channel_capacity.map

# lake and reservoir parameters
waterBodyInputNC = PCRGLOBWB20/input30min/routing/reservoirs/fromRensJune2013/reservoirparameterization/waterBodies30min.nc
onlyNaturalWaterBodies = False

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = PCRGLOBWB20/input30min/routing/cropCoefficientForOpenWater.nc

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = 0.0
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
waterBodyStorageIni            = /scratch/edwin/test_kinematic_wave/states/waterBodyStorage_1979-12-31.map
channelStorageIni              = /scratch/edwin/test_kinematic_wave/states/channelStorage_1979-12-31.map
readAvlChannelStorageIni       = /scratch/edwin/test_kinematic_wave/states/readAvlChannelStorage_1979-12-31.map
avgDischargeLongIni            = /scratch/edwin/test_kinematic_wave/states/avgDischargeLong_1979-12-31.map
avgDischargeShortIni           = /scratch/edwin/test_kinematic_wave/states/avgDischargeShort_1979-12-31.map
m2tDischargeLongIni            = /scratch/edwin/test_kinematic_wave/states/m2tDischargeLong_1979-12-31.map
avgBaseflowLongIni             = /scratch/edwin/test_kinematic_wave/states/avgBaseflowLong_1979-12-31.map
riverbedExchangeIni            = /scratch/edwin/test_kinematic_wave/states/riverbedExchange_1979-12-31.map
avgLakeReservoirInflowShortIni = /scratch/edwin/test_kinematic_wave/states/avgLakeReservoirInflowShort_1979-12-31.map
avgLakeReservoirOutflowLongIni = /scratch/edwin/test_kinematic_wave/states/avgLakeReservoirOutflowLong_1979-12-31.map
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = /scratch/edwin/test_kinematic_wave/states/subDischarge_1979-12-31.map

[reportingOptions]

# output files that will be written in the disk in netcdf files:
outDailyTotNC = discharge,dynamicFracWat,floodVolume,floodDepth
outMonthTotNC = gwRecharge,totalRunoff,baseflow,totalEvaporation,runoff,actualET
outMonthAvgNC = discharge,gwRecharge,totalRunoff,snowCoverSWE,fractionTotalEvaporation,storGroundwater,totalWaterStorageThickness,satDegUpp,satDegLow,interceptStor,snowFreeWater,snowCoverSWE,storUppTotal,storLowTotal,dynamicFracWat,floodVolume,floodDepth
outMonthEndNC = storGroundwater,totalActiveStorageThickness,totalWaterStorageThickness
outAnnuaTotNC = gwRecharge,totalRunoff,baseflow,totalEvaporation,runoff,actualET
outAnnuaAvgNC = storGroundwater,storGroundwaterTotal,totalActiveStorageThickness,totalWaterStorageThickness,discharge,fractionTotalEvaporation
outAnnuaEndNC = storGroundwater,storGroundwaterTotal,totalActiveStorageThickness,totalWaterStorageThickness
# netcdf format and zlib setup
formatNetCDF = NETCDF4
zlib = True
