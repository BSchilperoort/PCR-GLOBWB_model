[globalOptions]

# Set the pcrglobwb output directory in an absolute path.
#~ outputDir = /scratch-shared/edwin/pcrglobwb2_output_final_test/05min/
#~ outputDir = /scratch/mo/nest/ulysses/data/edwin/test/
#~ outputDir = /scratch/ms/copext/cyes/pcrglobwb_output_version_2020-08-12/
outputDir    = MAIN_OUTPUT_DIR


# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories and files will be relative to this.
#~ inputDir  = /projects/0/dfguu/data/hydroworld/pcrglobwb2_input_release/develop/pcrglobwb2_input/
inputDir     = /scratch/mo/nest/ulysses/data/edwin/pcrglobwb2_input_release/version_2019_11_beta_extended/pcrglobwb2_input/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap = global_05min/routing/ldd_and_cell_area/lddsound_05min.map
cloneMap    = global_05min/cloneMaps/global_parallelization/clone_M%s.map

# The area/landmask of interest:
# If None, area/landmask is limited for cells with ldd value. 
#~ landmask = None
landmask    = global_05min/cloneMaps/global_parallelization/mask_M%s.map

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB 2 output (not coupled to MODFLOW), with human factors (non-natural)
description = by Edwin H. Sutanudjaja (contact: e.h.sutanudjaja@uu.nl), PCR-GLOBWB run with human factors (non-natural) at 5 arcmin resolution

startTime = 1981-01-01
endTime   = 2019-12-31
# Format: YYYY-MM-DD ; The model runs on daily time step.

# spinning up options:
maxSpinUpsInYears = 10
minConvForSoilSto = 0.0
minConvForGwatSto = 0.0
minConvForChanSto = 0.0
minConvForTotlSto = 0.0


[meteoOptions]

#~ # Set the forcing temperature and precipitation files (relative to inputDir)
#~ precipitationNC = global_30min/meteo/forcing/daily_precipitation_cru_era-interim_2000_to_2010.nc
#~ temperatureNC   = global_30min/meteo/forcing/daily_temperature_cru_era-interim_2000_to_2010.nc
#~ 
#~ # Method to calculate referencePotETP (reference potential evaporation+transpiration)
#~ # options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
#~ referenceETPotMethod = Input
#~ refETPotFileNC  = global_30min/meteo/forcing/daily_referencePotET_cru_era-interim_2000_to_2010.nc


# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = /scratch/ms/copext/cyes/data/era5land_ulysses/version_202008XX/era5land/05min/precipitation_daily_1981-01-01_to_2019-12-31_05min.nc
temperatureNC   = /scratch/ms/copext/cyes/data/era5land_ulysses/version_202008XX/era5land/05min/tavg_daily_1981-01-01_to_2019-12-31_05min.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
referenceETPotMethod = Input
refETPotFileNC  = /scratch/ms/copext/cyes/data/era5land_ulysses/version_202008XX/era5land/05min/pet_daily_1981-01-01_to_2019-12-31_05min.nc


#~ cyes@cca-login4:/scratch/ms/copext/cyes/data/era5land_ulysses/version_202008XX/era5land/05min> ls -lah
#~ total 1.5T
#~ drwxr-x--- 2 cyes copext 4.0K Aug 26 10:42 .
#~ drwxr-x--- 3 cyes copext 4.0K Aug 26 09:03 ..
#~ -rw-r----- 1 cyes copext  338 Aug 26 09:10 clone_global_05min.txt
#~ -rw-r----- 1 cyes copext 497G Aug 26 12:15 pet_daily_1981-01-01_to_2019-12-31_05min.nc
#~ -rw-r----- 1 cyes copext 497G Aug 26 11:24 precipitation_daily_1981-01-01_to_2019-12-31_05min.nc
#~ -rw-r----- 1 cyes copext  13G Aug 26 09:15 precipitation_daily_2000-01-01_to_2000-12-31_05min.nc
#~ -rw-r----- 1 cyes copext 497G Aug 26 12:13 tavg_daily_1981-01-01_to_2019-12-31_05min.nc


# variable names in the forcing files (optional)
precipitationVariableName    = pre
temperatureVariableName      = tavg
referenceEPotVariableName    = pet

# conversion constants and factors to correct forcing values (optional) so that the units are in m.day-1 and degree Celcius                                                                                                           
precipitationConstant    = 0.0
precipitationFactor      = 0.001
temperatureConstant      = 0.0
temperatureFactor        = 1.0
referenceEPotConstant    = 0.0
referenceEPotFactor      = 0.001

# option to ignore small values of precipitation (default is False)
rounddownPrecipitation   = False



#~ [meteoDownscalingOptions]
#~ # This section is for a 5 arcmin run, for downscaling meteorological forcing at 30 arcmin to 5 arcmin.  
                                                                                                                                        #~ 
#~ downscalePrecipitation  = False                                                                                                                                   
#~ downscaleTemperature    = True                                                                                                                                   
#~ downscaleReferenceETPot = False                                                                                                                                   
   #~ 
#~ # downscaling (based on the digital elevation model):                                                                                                            
#~ # The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells.                                                    
#~ meteoDownscaleIds = global_05min/meteo/downscaling_from_30min/uniqueIds_30min.map                                                                      
#~ highResolutionDEM = global_05min/meteo/downscaling_from_30min/gtopo05min.map                                                                           
   #~ 
#~ # lapse rates:                                                                                                                                                   
#~ temperLapseRateNC = global_05min/meteo/downscaling_from_30min/temperature_slope.nc                                                                     
#~ precipLapseRateNC = global_05min/meteo/downscaling_from_30min/precipitation_slope.nc                                                                   
                                                                                                                                                                 #~ 
#~ # downscaling criteria (TODO: remove these):                                                                                                                     
#~ temperatCorrelNC  = global_05min/meteo/downscaling_from_30min/temperature_correl.nc                                                                     
#~ precipitCorrelNC  = global_05min/meteo/downscaling_from_30min/precipitation_correl.nc                                                                   
                                                                                                                                                                 #~ 
#~ # windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):                                                                      
#~ smoothingWindowsLength = 0


[landSurfaceOptions]

debugWaterBalance = True

numberOfUpperSoilLayers = 2

# soil and parameters
# - they are used for all land cover types, unless they are are defined in certain land cover type options 
#   (e.g. different/various soil types for agriculture areas)  
topographyNC     = global_05min/landSurface/topography/topography_parameters_5_arcmin_october_2015.nc
soilPropertiesNC = global_05min/landSurface/soil/soilProperties5ArcMin.nc


includeIrrigation = True

# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
historicalIrrigationArea = global_05min/waterUse/irrigation/irrigated_areas/irrigationArea05ArcMin.nc

# a pcraster map/value defining irrigation efficiency (dimensionless) - optional
irrigationEfficiency     = global_30min/waterUse/irrigation/irrigation_efficiency/efficiency.map


includeDomesticWaterDemand  = True
includeIndustryWaterDemand  = True
includeLivestockWaterDemand = True

# domestic, industrial and livestock water demand data (unit must be in m.day-1)
domesticWaterDemandFile  = global_05min/waterUse/waterDemand/domestic/domestic_water_demand_version_april_2015.nc
industryWaterDemandFile  = global_05min/waterUse/waterDemand/industry/industry_water_demand_version_april_2015.nc
livestockWaterDemandFile = global_05min/waterUse/waterDemand/livestock/livestock_water_demand_version_april_2015.nc


# desalination water supply (maximum/potential/capacity)
desalinationWater = global_05min/waterUse/desalination/desalination_water_version_april_2015.nc


# zone IDs (scale) at which allocations of groundwater and surface water (as well as desalinated water) are performed  
allocationSegmentsForGroundSurfaceWater = global_05min/waterUse/abstraction_zones/abstraction_zones_60min_05min.map


# pcraster maps defining the partitioning of groundwater - surface water source 
#
# - predefined surface water - groundwater partitioning for irrigation demand (e.g. based on Siebert, Global Map of Irrigation Areas version 5)
irrigationSurfaceWaterAbstractionFractionData           = global_05min/waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_SWFRAC.map
# -- quality map
irrigationSurfaceWaterAbstractionFractionDataQuality    = global_05min/waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_QUAL.map
#
# - threshold values defining the preference for surface water source for irrigation purpose
# -- treshold to maximize surface water irrigation use (cells with irrSurfaceWaterAbstractionFraction above this will prioritize irrigation surface water use)
treshold_to_maximize_irrigation_surface_water           = 0.50
# -- treshold to minimize fossil water withdrawal for irrigation (cells with irrSurfaceWaterAbstractionFraction below this have no fossil withdrawal for irrigation)
treshold_to_minimize_fossil_groundwater_irrigation      = 0.70
#
# - predefined surface water - groundwater partitioning for non irrigation demand (e.g. based on McDonald, 2014)
maximumNonIrrigationSurfaceWaterAbstractionFractionData = global_30min/waterUse/source_partitioning/surface_water_fraction_for_non_irrigation/max_city_sw_fraction.map


[forestOptions]

name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2

cropCoefficientNC = global_05min/landSurface/landCover/naturalTall/cropCoefficientForest.nc
interceptCapNC    = global_05min/landSurface/landCover/naturalTall/interceptCapInputForest.nc
coverFractionNC   = global_05min/landSurface/landCover/naturalTall/coverFractionInputForest.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = global_05min/landSurface/landCover/naturalTall/vegf_tall.map
minSoilDepthFrac  = global_30min/landSurface/landCover/naturalTall/minf_tall_permafrost.map
maxSoilDepthFrac  = global_30min/landSurface/landCover/naturalTall/maxf_tall.map
rootFraction1     = global_05min/landSurface/landCover/naturalTall/rfrac1_tall.map
rootFraction2     = global_05min/landSurface/landCover/naturalTall/rfrac2_tall.map	
maxRootDepth      = 1.0
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# initial conditions:
interceptStorIni = global_05min/initialConditions/non-natural/1999/interceptStor_forest_1981-12-31.nc
snowCoverSWEIni  = global_05min/initialConditions/non-natural/1999/snowCoverSWE_forest_1981-12-31.nc
snowFreeWaterIni = global_05min/initialConditions/non-natural/1999/snowFreeWater_forest_1981-12-31.nc
topWaterLayerIni = global_05min/initialConditions/non-natural/1999/topWaterLayer_forest_1981-12-31.nc
storUppIni       = global_05min/initialConditions/non-natural/1999/storUpp_forest_1981-12-31.nc
storLowIni       = global_05min/initialConditions/non-natural/1999/storLow_forest_1981-12-31.nc
interflowIni     = global_05min/initialConditions/non-natural/1999/interflow_forest_1981-12-31.nc


[grasslandOptions]

name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2

cropCoefficientNC = global_05min/landSurface/landCover/naturalShort/cropCoefficientGrassland.nc
interceptCapNC    = global_05min/landSurface/landCover/naturalShort/interceptCapInputGrassland.nc
coverFractionNC   = global_05min/landSurface/landCover/naturalShort/coverFractionInputGrassland.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following values:
fracVegCover      = global_05min/landSurface/landCover/naturalShort/vegf_short.map
minSoilDepthFrac  = global_30min/landSurface/landCover/naturalShort/minf_short_permafrost.map
maxSoilDepthFrac  = global_30min/landSurface/landCover/naturalShort/maxf_short.map
rootFraction1     = global_05min/landSurface/landCover/naturalShort/rfrac1_short.map
rootFraction2     = global_05min/landSurface/landCover/naturalShort/rfrac2_short.map	
maxRootDepth      = 0.5
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# initial conditions:
interceptStorIni = global_05min/initialConditions/non-natural/1999/interceptStor_grassland_1981-12-31.nc
snowCoverSWEIni  = global_05min/initialConditions/non-natural/1999/snowCoverSWE_grassland_1981-12-31.nc
snowFreeWaterIni = global_05min/initialConditions/non-natural/1999/snowFreeWater_grassland_1981-12-31.nc
topWaterLayerIni = global_05min/initialConditions/non-natural/1999/topWaterLayer_grassland_1981-12-31.nc
storUppIni       = global_05min/initialConditions/non-natural/1999/storUpp_grassland_1981-12-31.nc
storLowIni       = global_05min/initialConditions/non-natural/1999/storLow_grassland_1981-12-31.nc
interflowIni     = global_05min/initialConditions/non-natural/1999/interflow_grassland_1981-12-31.nc


[irrPaddyOptions]

name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = global_05min/landSurface/landCover/irrPaddy/fractionPaddy.map
minSoilDepthFrac = global_30min/landSurface/landCover/irrPaddy/minf_paddy_permafrost.map
maxSoilDepthFrac = global_30min/landSurface/landCover/irrPaddy/maxf_paddy.map
rootFraction1    = global_30min/landSurface/landCover/irrPaddy/rfrac1_paddy.map
rootFraction2    = global_30min/landSurface/landCover/irrPaddy/rfrac2_paddy.map
maxRootDepth     = 0.5
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
cropDeplFactor   = 0.2
minInterceptCap  = 0.0002

cropCoefficientNC = global_30min/landSurface/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc

# initial conditions:
interceptStorIni = global_05min/initialConditions/non-natural/1999/interceptStor_irrPaddy_1981-12-31.nc
snowCoverSWEIni  = global_05min/initialConditions/non-natural/1999/snowCoverSWE_irrPaddy_1981-12-31.nc
snowFreeWaterIni = global_05min/initialConditions/non-natural/1999/snowFreeWater_irrPaddy_1981-12-31.nc
topWaterLayerIni = global_05min/initialConditions/non-natural/1999/topWaterLayer_irrPaddy_1981-12-31.nc
storUppIni       = global_05min/initialConditions/non-natural/1999/storUpp_irrPaddy_1981-12-31.nc
storLowIni       = global_05min/initialConditions/non-natural/1999/storLow_irrPaddy_1981-12-31.nc
interflowIni     = global_05min/initialConditions/non-natural/1999/interflow_irrPaddy_1981-12-31.nc


[irrNonPaddyOptions]

name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = global_05min/landSurface/landCover/irrNonPaddy/fractionNonPaddy.map
minSoilDepthFrac = global_30min/landSurface/landCover/irrNonPaddy/minf_nonpaddy_permafrost.map
maxSoilDepthFrac = global_30min/landSurface/landCover/irrNonPaddy/maxf_nonpaddy.map
rootFraction1    = global_30min/landSurface/landCover/irrNonPaddy/rfrac1_nonpaddy.map
rootFraction2    = global_30min/landSurface/landCover/irrNonPaddy/rfrac2_nonpaddy.map
maxRootDepth     = 1.0
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
cropDeplFactor   = 0.5
minInterceptCap  = 0.0002

cropCoefficientNC = global_30min/landSurface/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:
interceptStorIni = global_05min/initialConditions/non-natural/1999/interceptStor_irrNonPaddy_1981-12-31.nc
snowCoverSWEIni  = global_05min/initialConditions/non-natural/1999/snowCoverSWE_irrNonPaddy_1981-12-31.nc
snowFreeWaterIni = global_05min/initialConditions/non-natural/1999/snowFreeWater_irrNonPaddy_1981-12-31.nc
topWaterLayerIni = global_05min/initialConditions/non-natural/1999/topWaterLayer_irrNonPaddy_1981-12-31.nc
storUppIni       = global_05min/initialConditions/non-natural/1999/storUpp_irrNonPaddy_1981-12-31.nc
storLowIni       = global_05min/initialConditions/non-natural/1999/storLow_irrNonPaddy_1981-12-31.nc
interflowIni     = global_05min/initialConditions/non-natural/1999/interflow_irrNonPaddy_1981-12-31.nc




[groundwaterOptions]

debugWaterBalance = True

groundwaterPropertiesNC = global_05min/groundwater/properties/groundwaterProperties5ArcMin.nc
# The file will containspecificYield (m3.m-3), kSatAquifer, recessionCoeff (day-1)
#
# - minimum value for groundwater recession coefficient (day-1) 
minRecessionCoeff = 1.0e-4

# some options for constraining groundwater abstraction
limitFossilGroundWaterAbstraction      = True
estimateOfRenewableGroundwaterCapacity = 0.0
estimateOfTotalGroundwaterThickness    = global_05min/groundwater/aquifer_thickness_estimate/thickness_05min.map
# minimum and maximum total groundwater thickness 
minimumTotalGroundwaterThickness       = 100.
maximumTotalGroundwaterThickness       = None

# annual pumping capacity for each region (unit: billion cubic meter per year), should be given in a netcdf file
pumpingCapacityNC = global_30min/waterUse/groundwater_pumping_capacity/regional_abstraction_limit.nc

# initial conditions:
storGroundwaterIni                        = global_05min/initialConditions/non-natural/1999/storGroundwater_1981-12-31.nc
storGroundwaterFossilIni                  = global_05min/initialConditions/non-natural/1999/storGroundwaterFossil_1981-12-31.nc
#
# additional initial conditions for pumping behaviors
avgNonFossilGroundwaterAllocationLongIni  = global_05min/initialConditions/non-natural/1999/avgNonFossilGroundwaterAllocationLong_1981-12-31.nc
avgNonFossilGroundwaterAllocationShortIni = global_05min/initialConditions/non-natural/1999/avgNonFossilGroundwaterAllocationShort_1981-12-31.nc
avgTotalGroundwaterAbstractionIni         = global_05min/initialConditions/non-natural/1999/avgTotalGroundwaterAbstraction_1981-12-31.nc
avgTotalGroundwaterAllocationLongIni      = global_05min/initialConditions/non-natural/1999/avgTotalGroundwaterAllocationLong_1981-12-31.nc
avgTotalGroundwaterAllocationShortIni     = global_05min/initialConditions/non-natural/1999/avgTotalGroundwaterAllocationShort_1981-12-31.nc
#
# additional initial conditions (needed only for MODFLOW run) 
relativeGroundwaterHeadIni                = global_05min/initialConditions/non-natural/1999/relativeGroundwaterHead_1981-12-31.nc
baseflowIni                               = global_05min/initialConditions/non-natural/1999/baseflow_1981-12-31.nc

# zonal IDs (scale) at which zonal allocation of groundwater is performed  
allocationSegmentsForGroundwater = global_05min/waterUse/abstraction_zones/abstraction_zones_30min_05min.map



[routingOptions]

debugWaterBalance = True

# drainage direction map
lddMap      = global_05min/routing/ldd_and_cell_area/lddsound_05min.map

# cell area (unit: m2)
cellAreaMap = global_05min/routing/ldd_and_cell_area/cellsize05min.correct.map

# routing method:
routingMethod = accuTravelTime

# manning coefficient
manningsN   = 0.04

# Option for flood plain simulation
dynamicFloodPlain = True

# manning coefficient for floodplain
floodplainManningsN = 0.07


# channel gradient
gradient             = global_05min/routing/channel_properties/channel_gradient.map

# constant channel depth 
constantChannelDepth = global_05min/routing/channel_properties/bankfull_depth.map

# constant channel width (optional)
constantChannelWidth = global_05min/routing/channel_properties/bankfull_width.map

# minimum channel width (optional)
minimumChannelWidth  = global_05min/routing/channel_properties/bankfull_width.map

# channel properties for flooding
bankfullCapacity     = None
# - If None, it will be estimated from (bankfull) channel depth (m) and width (m) 


# files for relative elevation (above minimum dem) 
relativeElevationFiles  = global_05min/routing/channel_properties/dzRel%04d.map
relativeElevationLevels = 0.0, 0.01, 0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.00


# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = global_30min/routing/kc_surface_water/cropCoefficientForOpenWater.nc
minCropWaterKC         = 1.00


# lake and reservoir parameters
waterBodyInputNC       = global_05min/routing/surface_water_bodies/waterBodies5ArcMin.nc
onlyNaturalWaterBodies = False


# initial conditions:
waterBodyStorageIni            = global_05min/initialConditions/non-natural/1999/waterBodyStorage_1981-12-31.nc
channelStorageIni              = global_05min/initialConditions/non-natural/1999/channelStorage_1981-12-31.nc
readAvlChannelStorageIni       = global_05min/initialConditions/non-natural/1999/readAvlChannelStorage_1981-12-31.nc
avgDischargeLongIni            = global_05min/initialConditions/non-natural/1999/avgDischargeLong_1981-12-31.nc
avgDischargeShortIni           = global_05min/initialConditions/non-natural/1999/avgDischargeShort_1981-12-31.nc
m2tDischargeLongIni            = global_05min/initialConditions/non-natural/1999/m2tDischargeLong_1981-12-31.nc
avgBaseflowLongIni             = global_05min/initialConditions/non-natural/1999/avgBaseflowLong_1981-12-31.nc
riverbedExchangeIni            = global_05min/initialConditions/non-natural/1999/riverbedExchange_1981-12-31.nc
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = global_05min/initialConditions/non-natural/1999/subDischarge_1981-12-31.nc
#
avgLakeReservoirInflowShortIni = global_05min/initialConditions/non-natural/1999/avgLakeReservoirInflowShort_1981-12-31.nc
avgLakeReservoirOutflowLongIni = global_05min/initialConditions/non-natural/1999/avgLakeReservoirOutflowLong_1981-12-31.nc
#
# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = global_05min/initialConditions/non-natural/1999/timestepsToAvgDischarge_1981-12-31.nc
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)




[reportingOptions]

# landmask for reporting
#~ landmask_for_reporting = /scratch/mo/nest/ulysses/data/edwin/clone_maps/version_2020-07-21/clone_mask_basin_%s.map
#~ landmask_for_reporting = /scratch/mo/nest/ulysses/data/edwin/clone_maps/version_2020-08-04/pcraster_maps/clone_maps_with_quick_fix_but_incomplete/landmask_land_mask_%s.map
landmask_for_reporting    = global_05min/cloneMaps/global_parallelization/mask_M%s.map


# output files that will be written in the disk in netcdf files:
# - daily resolution
#~ outDailyTotNC = discharge,totalRunoff,gwRecharge,totalGroundwaterAbstraction,surfaceWaterStorage
outDailyTotNC    = discharge,totalRunoff,gwRecharge,totalGroundwaterAbstraction,surfaceWaterStorage
# - monthly resolution
outMonthTotNC    = actualET,irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal,runoff,totalRunoff,baseflow,directRunoff,interflowTotal,totalGroundwaterAbstraction,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,precipitation,gwRecharge,surfaceWaterInf,referencePotET,totalEvaporation,totalPotentialEvaporation,totLandSurfaceActuaET,totalLandSurfacePotET,waterBodyActEvaporation,waterBodyPotEvaporation
outMonthAvgNC    = discharge,temperature,dynamicFracWat,surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalActiveStorageThickness,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage,waterBodyStorage
outMonthEndNC    = storGroundwater,storGroundwaterFossil,waterBodyStorage,channelStorage,totalWaterStorageThickness,totalActiveStorageThickness
# - annual resolution
outAnnuaTotNC    = totalEvaporation,precipitation,gwRecharge,totalRunoff,baseflow,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,totalGroundwaterAbstraction,totalAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,runoff,actualET,irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,irrigationWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal,precipitation_at_irrigation,netLqWaterToSoil_at_irrigation,evaporation_from_irrigation,transpiration_from_irrigation,referencePotET
outAnnuaAvgNC    = temperature,discharge,surfaceWaterStorage,waterBodyStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage,waterBodyStorage,fractionWaterBodyEvaporation,fractionTotalEvaporation,fracSurfaceWaterAllocation,fracDesalinatedWaterAllocation,gwRecharge
outAnnuaEndNC = surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness
# - monthly and annual maxima
outMonthMaxNC    = channelStorage,dynamicFracWat,floodVolume,floodDepth,surfaceWaterLevel,discharge,totalRunoff
outAnnuaMaxNC   = None

#~ # netcdf format and zlib setup
#~ formatNetCDF = NETCDF4
#~ zlib = True



