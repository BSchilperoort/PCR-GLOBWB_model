[globalOptions]


# Set the pcrglobwb output directory in an absolute path.
#~ outputDir = /scratch/ms/copext/cyes/test_monthly_runs/
outputDir    = MAIN_OUTPUT_DIR


# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories and files will be relative to this.
inputDir     = /scratch/ms/copext/cyes/data/pcrglobwb_input_ulysses/develop/ 


# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
cloneMap     = global_06min/cloneMaps/global_land_mask/version_2020-08-11/land_mask_only.map

# The area/landmask of interest:
landmask     = global_06min/cloneMaps/global_land_mask/version_2020-08-11/land_mask_only.map


# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output (not coupled to MODFLOW), development version for Ulysses
description = by Edwin H. Sutanudjaja (contact: e.h.sutanudjaja@uu.nl)


startTime = STARTING_DATE
endTime   = END_DATE

#~ startTime = 2000-01-01
#~ endTime   = 2000-01-31
#~ # Format: YYYY-MM-DD ; The model runs on daily time step.


# spinning up options:
maxSpinUpsInYears = 2
minConvForSoilSto = 0.0
minConvForGwatSto = 0.0
minConvForChanSto = 0.0
minConvForTotlSto = 0.0


# option/directory for saving the spin-up directory 
spinUpOutputDir = True


#~ [prefactorOptions]
#~ 
#~ linear_multiplier_for_refPotET         = 1.0
#~ linear_multiplier_for_degreeDayFactor  = 1.0
#~ linear_multiplier_for_minSoilDepthFrac = 1.0
#~ log_10_multiplier_for_kSat             = 0.0
#~ linear_multiplier_for_storCap          = 1.0
#~ log_10_multiplier_for_recessionCoeff   = 0.0
#~ multiplier_for_manningsN               = 1.0
#~ storGroundwaterIni_file                = Default


[meteoOptions]


# Method to calculate referencePotETP (reference potential evaporation+transpiration)
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
referenceETPotMethod = Input

#~ precipitationNC       = PRECIPITATION_FORCING_FILE
#~ temperatureNC         = TEMPERATURE_FORCING_FILE
#~ refETPotFileNC        = REF_POT_ET_FORCING_FILE

precipitationNC               = /scratch/mo/nest/ulysses/data/meteo/era5land/%04i/%02i/precipitation_daily_%02i_%04i.nc
temperatureNC                 = /scratch/mo/nest/ulysses/data/meteo/era5land/%04i/%02i/tavg_%02i_%04i.nc
refETPotFileNC                = /scratch/mo/nest/ulysses/data/meteo/era5land/%04i/%02i/pet_%02i_%04i.nc
precipitation_file_per_month  = True
temperature_file_per_month    = True
refETPotFileNC_file_per_month = True


# variable names in the forcing files (optional)
precipitationVariableName    = pre
temperatureVariableName      = tavg
referenceEPotVariableName    = pet

# conversion constants and factors to correct forcing values (optional) so that the units are in m.day-1 and degree Celcius                                                                                                           
precipitationConstant    = 0.0
precipitationFactor      = 0.001
temperatureConstant      = 0.0
temperatureFactor        = 1.0
referenceEPotConstant    = 0.0
referenceEPotFactor      = 0.001


# option to ignore small values of precipitation (default is False)
rounddownPrecipitation   = False


[landSurfaceOptions]

debugWaterBalance = True

numberOfUpperSoilLayers = 2

# topography parameters
topographyNC        = global_06min/landSurface/topography/version_2020-07-22/pcrglobwb_topography_parameters_06min_22_july_2020.nc

# soil parameters
soilPropertiesNC    = global_06min/landSurface/soil/version_2020-06-23/soilgrids_properties_ulysses_6arcmin_filled.nc
# TODO: Improve 
		
# option to skip extrapolation
noParameterExtrapolation = True

# using a dummy land cover
landCoverTypes = forest,grassland
noLandCoverFractionCorrection = False


[forestOptions]

name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2

cropCoefficientNC = global_06min_resampled_from_global_05min/landSurface/landCover/naturalTall/cropCoefficientForest.nc
interceptCapNC    = global_06min_resampled_from_global_05min/landSurface/landCover/naturalTall/interceptCapInputForest.nc
coverFractionNC   = global_06min_resampled_from_global_05min/landSurface/landCover/naturalTall/coverFractionInputForest.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = global_06min_resampled_from_global_05min/landSurface/landCover/naturalTall/vegf_tall.nc
minSoilDepthFrac  = global_30min/landSurface/landCover/naturalTall/minf_tall_permafrost.nc
maxSoilDepthFrac  = global_30min/landSurface/landCover/naturalTall/maxf_tall.nc
rootFraction1     = global_06min_resampled_from_global_05min/landSurface/landCover/naturalTall/rfrac1_tall.nc
rootFraction2     = global_06min_resampled_from_global_05min/landSurface/landCover/naturalTall/rfrac2_tall.nc	
maxRootDepth      = 1.0
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# initial conditions:
interceptStorIni = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/interceptStor_forest_1999-12-31.nc
snowCoverSWEIni  = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/snowCoverSWE_forest_1999-12-31.nc
snowFreeWaterIni = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/snowFreeWater_forest_1999-12-31.nc
topWaterLayerIni = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/topWaterLayer_forest_1999-12-31.nc
storUppIni       = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/storUpp_forest_1999-12-31.nc
storLowIni       = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/storLow_forest_1999-12-31.nc
interflowIni     = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/interflow_forest_1999-12-31.nc


[grasslandOptions]

name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2

cropCoefficientNC = global_06min_resampled_from_global_05min/landSurface/landCover/naturalShort/cropCoefficientGrassland.nc
interceptCapNC    = global_06min_resampled_from_global_05min/landSurface/landCover/naturalShort/interceptCapInputGrassland.nc
coverFractionNC   = global_06min_resampled_from_global_05min/landSurface/landCover/naturalShort/coverFractionInputGrassland.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following values:
fracVegCover      = global_06min_resampled_from_global_05min/landSurface/landCover/naturalShort/vegf_short.nc
minSoilDepthFrac  = global_30min/landSurface/landCover/naturalShort/minf_short_permafrost.nc
maxSoilDepthFrac  = global_30min/landSurface/landCover/naturalShort/maxf_short.nc
rootFraction1     = global_06min_resampled_from_global_05min/landSurface/landCover/naturalShort/rfrac1_short.nc
rootFraction2     = global_06min_resampled_from_global_05min/landSurface/landCover/naturalShort/rfrac2_short.nc	
maxRootDepth      = 0.5
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# initial conditions:
interceptStorIni = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/interceptStor_grassland_1999-12-31.nc
snowCoverSWEIni  = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/snowCoverSWE_grassland_1999-12-31.nc
snowFreeWaterIni = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/snowFreeWater_grassland_1999-12-31.nc
topWaterLayerIni = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/topWaterLayer_grassland_1999-12-31.nc
storUppIni       = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/storUpp_grassland_1999-12-31.nc
storLowIni       = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/storLow_grassland_1999-12-31.nc
interflowIni     = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/interflow_grassland_1999-12-31.nc


[groundwaterOptions]
# TODO: We still have to spin up the model for initial conditions.

debugWaterBalance       = True

groundwaterPropertiesNC = global_06min_resampled_from_global_05min/groundwater/properties/groundwaterProperties5ArcMin.nc
# TODO: FIX THIS. The nc file is just dummy, this should be None. 
#
specificYield  = global_06min/groundwater/properties/version_2020-07-08/specific_yield_aquifer_06min.map
recessionCoeff = global_06min/groundwater/properties/version_2020-07-08/recession_coefficient_06min.map
kSatAquifer    = global_06min/groundwater/properties/version_2020-07-08/k_conductivity_aquifer_06min.map
#
# - minimum value for groundwater recession coefficient (day-1) 
minRecessionCoeff = 1.0e-4


doNotExtrapolateThickness = True
noParameterExtrapolation  = True


# initial conditions:
storGroundwaterIni                        = MAIN_INITIAL_STATE_FOLDER/storGroundwater_DATE_FOR_INITIAL_STATES.map
storGroundwaterFossilIni                  = MAIN_INITIAL_STATE_FOLDER/storGroundwaterFossil_DATE_FOR_INITIAL_STATES.map
#
# additional initial conditions for pumping behaviors
avgNonFossilGroundwaterAllocationLongIni  = MAIN_INITIAL_STATE_FOLDER/avgNonFossilGroundwaterAllocationLong_DATE_FOR_INITIAL_STATES.map
avgNonFossilGroundwaterAllocationShortIni = MAIN_INITIAL_STATE_FOLDER/avgNonFossilGroundwaterAllocationShort_DATE_FOR_INITIAL_STATES.map
avgTotalGroundwaterAbstractionIni         = MAIN_INITIAL_STATE_FOLDER/avgTotalGroundwaterAbstraction_DATE_FOR_INITIAL_STATES.map
avgTotalGroundwaterAllocationLongIni      = MAIN_INITIAL_STATE_FOLDER/avgTotalGroundwaterAllocationLong_DATE_FOR_INITIAL_STATES.map
avgTotalGroundwaterAllocationShortIni     = MAIN_INITIAL_STATE_FOLDER/avgTotalGroundwaterAllocationShort_DATE_FOR_INITIAL_STATES.map
#
# additional initial conditions (needed only for MODFLOW run) 
relativeGroundwaterHeadIni                = MAIN_INITIAL_STATE_FOLDER/relativeGroundwaterHead_DATE_FOR_INITIAL_STATES.map
baseflowIni                               = MAIN_INITIAL_STATE_FOLDER/baseflow_DATE_FOR_INITIAL_STATES.map

#~ # initial conditions:
#~ storGroundwaterIni                           = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/storGroundwater_1999-12-31.nc
#~ storGroundwaterFossilIni                     = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/storGroundwaterFossil_1999-12-31.nc
#~ avgNonFossilGroundwaterAllocationLongIni     = 0.0
#~ avgNonFossilGroundwaterAllocationShortIni    = 0.0
#~ avgTotalGroundwaterAbstractionIni            = 0.0
#~ avgTotalGroundwaterAllocationLongIni         = 0.0
#~ avgTotalGroundwaterAllocationShortIni        = 0.0
#~ relativeGroundwaterHeadIni                   = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/relativeGroundwaterHead_1999-12-31.nc
#~ baseflowIni                                  = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/baseflow_1999-12-31.nc



[routingOptions]
# TODO: We still have to spin up the model for initial conditions.

debugWaterBalance = True

# drainage direction map
#~ lddMap   = 5.0
lddMap      = global_06min/routing/ldd_and_waterbodies/version_2020-07-XX/lddsound_06min_version_202007XX_for_ulysses.map

# cell area (unit: m2)
cellAreaMap = global_06min/routing/channel_properties/version_2020-07-22/cellarea.map

# routing method:
routingMethod = accuTravelTime

# manning coefficient
manningsN   = 0.04

# Option for flood plain simulation
dynamicFloodPlain = False


# channel gradient
gradient             = global_06min/routing/channel_properties/version_2020-07-22/channel_gradient.map

# constant channel depth 
constantChannelDepth = global_06min/routing/channel_properties/version_2020-07-22/bankfull_depth.map

# constant channel width (optional)
constantChannelWidth = global_06min/routing/channel_properties/version_2020-07-22/bankfull_width.map

# minimum channel width (optional)
minimumChannelWidth  = global_06min/routing/channel_properties/version_2020-07-22/bankfull_width.map

# channel properties for flooding
bankfullCapacity     = None
# - If None, it will be estimated from (bankfull) channel depth (m) and width (m) 


# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = global_30min/routing/kc_surface_water/cropCoefficientForOpenWater.nc
minCropWaterKC         = 1.00


# lake and reservoir parameters
includeWaterBodies     = True
waterBodyInputNC       = global_06min/routing/ldd_and_waterbodies/version_2020-07-XX/lakes_and_reservoirs_06min_global_version_july_2020_for_ulysses.nc
onlyNaturalWaterBodies = False


# initial conditions:
waterBodyStorageIni            = MAIN_INITIAL_STATE_FOLDER/waterBodyStorage_DATE_FOR_INITIAL_STATES.map
channelStorageIni              = MAIN_INITIAL_STATE_FOLDER/channelStorage_DATE_FOR_INITIAL_STATES.map
readAvlChannelStorageIni       = MAIN_INITIAL_STATE_FOLDER/readAvlChannelStorage_DATE_FOR_INITIAL_STATES.map
avgDischargeLongIni            = MAIN_INITIAL_STATE_FOLDER/avgDischargeLong_DATE_FOR_INITIAL_STATES.map
avgDischargeShortIni           = MAIN_INITIAL_STATE_FOLDER/avgDischargeShort_DATE_FOR_INITIAL_STATES.map
m2tDischargeLongIni            = MAIN_INITIAL_STATE_FOLDER/m2tDischargeLong_DATE_FOR_INITIAL_STATES.map
avgBaseflowLongIni             = MAIN_INITIAL_STATE_FOLDER/avgBaseflowLong_DATE_FOR_INITIAL_STATES.map
riverbedExchangeIni            = MAIN_INITIAL_STATE_FOLDER/riverbedExchange_DATE_FOR_INITIAL_STATES.map
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = MAIN_INITIAL_STATE_FOLDER/subDischarge_DATE_FOR_INITIAL_STATES.map
#
avgLakeReservoirInflowShortIni = MAIN_INITIAL_STATE_FOLDER/avgLakeReservoirInflowShort_DATE_FOR_INITIAL_STATES.map
avgLakeReservoirOutflowLongIni = MAIN_INITIAL_STATE_FOLDER/avgLakeReservoirOutflowLong_DATE_FOR_INITIAL_STATES.map
#
# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = MAIN_INITIAL_STATE_FOLDER/timestepsToAvgDischarge_DATE_FOR_INITIAL_STATES.map
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)


#~ # initial conditions:
#~ waterBodyStorageIni              = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/waterBodyStorage_1999-12-31.nc
#~ channelStorageIni                = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/channelStorage_1999-12-31.nc
#~ readAvlChannelStorageIni         = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/readAvlChannelStorage_1999-12-31.nc
#~ avgDischargeLongIni              = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/avgDischargeLong_1999-12-31.nc
#~ avgDischargeShortIni             = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/avgDischargeShort_1999-12-31.nc
#~ m2tDischargeLongIni              = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/m2tDischargeLong_1999-12-31.nc
#~ avgBaseflowLongIni               = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/avgBaseflowLong_1999-12-31.nc
#~ riverbedExchangeIni              = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/riverbedExchange_1999-12-31.nc
#~ subDischargeIni                  = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/subDischarge_1999-12-31.nc
#~ avgLakeReservoirInflowShortIni   = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/avgLakeReservoirInflowShort_1999-12-31.nc
#~ avgLakeReservoirOutflowLongIni   = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/avgLakeReservoirOutflowLong_1999-12-31.nc
#~ timestepsToAvgDischargeIni       = global_06min_resampled_from_global_05min/initialConditions/non-natural/1999/timestepsToAvgDischarge_1999-12-31.nc


[reportingOptions]

# landmask for reporting
landmask_for_reporting    = global_06min/cloneMaps/global_land_mask/version_2020-08-11/land_mask_only.map

# output files that will be written in the disk in netcdf files:
# - daily resolution
outDailyTotNC = ulyssesP,ulyssesET,ulyssesSWE,ulyssesQsm,ulyssesSM,ulyssesQrRunoff,ulyssesDischarge
# - monthly resolution
outMonthTotNC = precipitation,referencePotET,totalEvaporation,totalRunoff,gwRecharge
outMonthAvgNC = temperature,gwRecharge,discharge,ulyssesP,ulyssesET,ulyssesSWE,ulyssesQsm,ulyssesSM,ulyssesQrRunoff,ulyssesDischarge,totalWaterStorageThickness
outMonthEndNC = ulyssesSWE,ulyssesSM,totalWaterStorageThickness
# - annual resolution
#~ outAnnuaTotNC = None
#~ outAnnuaAvgNC = None
#~ outAnnuaEndNC = None
outAnnuaTotNC = precipitation,totalEvaporation,totalRunoff,gwRecharge,referencePotET
outAnnuaAvgNC = gwRecharge,totalWaterStorageThickness,discharge
outAnnuaEndNC = totalWaterStorageThickness
# - monthly and annual maxima
outMonthMaxNC = None
outAnnuaMaxNC = None

#~ # netcdf format and zlib setup
#~ formatNetCDF = NETCDF4
#~ zlib = True

# option to save states at the end of every month
save_monthly_end_states = True
