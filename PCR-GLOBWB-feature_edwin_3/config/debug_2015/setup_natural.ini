[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
inputDir = /data/hydroworld/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
cloneMap = others/Global/Global_CloneMap_30min.map 

# The area/landmask of interest:
landmask = None
# If None, area/landmask is limited for cells with ldd value. 

# Set the output directory in an absolute path.
outputDir = /scratch/edwin/debug_2015/CRU-TS3.21/natural

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output
description = test version (by Edwin H. Sutanudjaja) 

startTime = 1960-01-01
endTime   = 2010-12-31
# Format: YYYY-MM-DD ; The current model runs on the daily time step.

# spinning up options:
maxSpinUpsInYears = 25
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_precipitation_1958_to_2010.nc
temperatureNC   = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_temperature_1958_to_2010.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Input
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC  = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_referencePotET_1958_to_2010.nc

[landSurfaceOptions]
debugWaterBalance = True

numberOfUpperSoilLayers = 2

#~ topographyNC      = PCRGLOBWB20/input30min/landSurface/topo/topoProperties.nc
#~ soilPropertiesNC  = PCRGLOBWB20/input30min/landSurface/soil/soilProperties.nc

topographyNC = None
# If topographyNC (netCDF format) is not defined, we use the following PCRaster maps:
#-maps of relative elevation above floodplain, in percent (relative to mapDirectory)
dzRel0001     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0001.map			
dzRel0005     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0005.map
dzRel0010     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0010.map
dzRel0020     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0020.map
dzRel0030     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0030.map
dzRel0040     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0040.map
dzRel0050     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0050.map
dzRel0060     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0060.map
dzRel0070     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0070.map
dzRel0080     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0080.map
dzRel0090     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0090.map
dzRel0100     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/hydro1k_dzrel0100.map
#-other (global) maps:
tanslope      = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/globalgradslope.map
slopeLength   = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/globalbcat.map
orographyBeta = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/globalboro.map

#~ soilPropertiesNC = landSurface/soil/soilProperties.nc
soilPropertiesNC = None
# If soilPropertiesNC (netCDF format) is not defined, we use the following PCRaster maps: 
airEntryValue1       = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_psis30.map
airEntryValue2       = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_psis100.map
KSat1                = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_ks30.map
KSat2                = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_ks100.map
poreSizeBeta1        = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_beta30.map
poreSizeBeta2        = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_beta100.map
firstStorDepth       = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_z1_permafrost.map
secondStorDepth      = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_z2_permafrost.map
soilWaterStorageCap1 = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_sc1_permafrost.map
soilWaterStorageCap2 = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_sc2_permafrost.map
resVolWC1            = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_thr30.map
resVolWC2            = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_thr100.map
satVolWC1            = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_ths30.map
satVolWC2            = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_ths100.map
percolationImp       = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/fao30_p2imp_permafrost.map

#~ includeIrrigation = True
includeIrrigation = False
# if True, there are four land cover types defined: forest,grassland,irrPaddy,irrNonPaddy
# if False, two (natural) land cover types defined: forest,grassland

# a pcraster map/value defining irrigation efficiency (dimensionless)
irrigationEfficiency = PCRGLOBWB20/input30min/landSurface/waterDemand/efficiency/efficiency.map
#~ irrigationEfficiency = None

# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
historicalIrrigationArea = None
#~ historicalIrrigationArea = PCRGLOBWB20/input30min/landSurface/waterDemand/irrigated_areas/irrigationArea30ArcMin.nc

#~ includeDomesticWaterDemand  = True
#~ includeIndustryWaterDemand  = True
#~ includeLivestockWaterDemand = True
includeDomesticWaterDemand  = False
includeIndustryWaterDemand  = False
includeLivestockWaterDemand = False

# domestic and industrial water demand data (unit must be in m.day-1)
domesticWaterDemandFile  = None
industryWaterDemandFile  = None
livestockWaterDemandFile = None
#~ domesticWaterDemandFile  = /home/sutan101/data/data_from_yoshi/water_demand/water_demand_in_m_per_day/domestic_water_demand_version_october_2014.nc
#~ industryWaterDemandFile  = /home/sutan101/data/data_from_yoshi/water_demand/water_demand_in_m_per_day/industrial_water_demand_version_october_2014.nc
#~ livestockWaterDemandFile = /home/sutan101/data/data_from_yoshi/water_demand/water_demand_in_m_per_day/from_stefanie/livestock_water_demand_1960-2012.nc

# desalination water supply (maximum/potential/capacity)
desalinationWater = None
#~ desalinationWater = /home/sutan101/data/data_from_yoshi/desalination/desalination_in_m_per_day/desalination_water_use_version_october_2014.nc

# zone IDs (scale) at which allocations of groundwater and surface water (as well as desalinated water) are performed  
allocationSegmentsForGroundSurfaceWater = None
#~ allocationSegmentsForGroundSurfaceWater = others/irrigationZones/one_arc_degree/uniqueIds60min.nom.map

[forestOptions]
name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0000

#~ landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/forest/forestProperties.nc
landCoverMapsNC  = None
fracVegCover     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/vegf_tall.map
rootFraction1    = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/rfrac1_tall.map
rootFraction2    = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/rfrac2_tall.map
maxRootDepth     = PCRGLOBWB20/input30min/landCover/forest/fao_root_tall.map
minSoilDepthFrac = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/minf_tall_permafrost.map
maxSoilDepthFrac = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/maxf_tall.map

#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = /home/sutan101/data/rens_seasonal_parameters/global_crop_coefficient_forest_30min_rens.nc
interceptCapNC    = /home/sutan101/data/rens_seasonal_parameters/global_interception_capacity_forest_30min_rens.nc
coverFractionNC   = /home/sutan101/data/rens_seasonal_parameters/global_cover_fraction_forest_30min_rens.nc

# initial conditions:
interceptStorIni = /scratch/edwin/IWMI_run_07_nov/natural_run/states/interceptStor_forest_1960-12-31.map
snowCoverSWEIni  = /scratch/edwin/IWMI_run_07_nov/natural_run/states/snowCoverSWE_forest_1960-12-31.map
snowFreeWaterIni = /scratch/edwin/IWMI_run_07_nov/natural_run/states/snowFreeWater_forest_1960-12-31.map
topWaterLayerIni = /scratch/edwin/IWMI_run_07_nov/natural_run/states/topWaterLayer_forest_1960-12-31.map
storUppIni       = /scratch/edwin/IWMI_run_07_nov/natural_run/states/storUpp_forest_1960-12-31.map
storLowIni       = /scratch/edwin/IWMI_run_07_nov/natural_run/states/storLow_forest_1960-12-31.map
interflowIni     = /scratch/edwin/IWMI_run_07_nov/natural_run/states/interflow_forest_1960-12-31.map

[grasslandOptions]
name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0000

#~ landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/grassland/grasslandProperties.nc
landCoverMapsNC  = None
fracVegCover     = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/vegf_short.map
rootFraction1    = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/rfrac1_short.map
rootFraction2    = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/rfrac2_short.map
maxRootDepth     = PCRGLOBWB20/input30min/landCover/grassland/fao_root_short.map
minSoilDepthFrac = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/minf_short_permafrost.map
maxSoilDepthFrac = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/maxf_short.map

#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = /home/sutan101/data/rens_seasonal_parameters/global_crop_coefficient_grassland_30min_rens.nc
interceptCapNC    = /home/sutan101/data/rens_seasonal_parameters/global_interception_capacity_grassland_30min_rens.nc
coverFractionNC   = /home/sutan101/data/rens_seasonal_parameters/global_cover_fraction_grassland_30min_rens.nc

# initial conditions:
interceptStorIni = /scratch/edwin/IWMI_run_07_nov/natural_run/states/interceptStor_grassland_1960-12-31.map
snowCoverSWEIni  = /scratch/edwin/IWMI_run_07_nov/natural_run/states/snowCoverSWE_grassland_1960-12-31.map
snowFreeWaterIni = /scratch/edwin/IWMI_run_07_nov/natural_run/states/snowFreeWater_grassland_1960-12-31.map
topWaterLayerIni = /scratch/edwin/IWMI_run_07_nov/natural_run/states/topWaterLayer_grassland_1960-12-31.map
storUppIni       = /scratch/edwin/IWMI_run_07_nov/natural_run/states/storUpp_grassland_1960-12-31.map
storLowIni       = /scratch/edwin/IWMI_run_07_nov/natural_run/states/storLow_grassland_1960-12-31.map
interflowIni     = /scratch/edwin/IWMI_run_07_nov/natural_run/states/interflow_grassland_1960-12-31.map

[groundwaterOptions]
debugWaterBalance = True

groundwaterPropertiesNC = PCRGLOBWB20/input30min/groundwater/groundwaterProperties.nc

#~ groundwaterPropertiesNC = None
#~ # if groundwaterPropertiesNC = None, the following PCRaster maps must be defined:
#~ recessionCoeff = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/globalalpha.map
#~ specificYield  = /home/beek0120/PCRGLOBWB/PCRGLOBWB_V1.0/input30min/originalmaps/specificyield.map

# minimum value for groundwater recession coefficient (day-1)
minRecessionCoeff = 2.5e-4

# annual pumping capacity for each region (unit: billion cubic meter per year), should be given in a netcdf file
#~ pumpingCapacityNC = /home/sutan101/data/limit_gw_abstraction_half_arc_degree/design_pumping_capacity/regional_abstraction_limit.nc
pumpingCapacityNC = None
# - If pumpingCapacityNC = None, no pumping/abstraction limit is defined.

# initial condition:
storGroundwaterIni = /scratch/edwin/IWMI_run_07_nov/natural_run/states/storGroundwater_1960-12-31.map
storGroundwaterFossilIni = Maximum
avgTotalGroundwaterAbstractionIni = 0.0
avgTotalGroundwaterAllocationLongIni  = 0.0
avgTotalGroundwaterAllocationShortIni = 0.0
avgNonFossilGroundwaterAllocationLongIni  = 0.0
avgNonFossilGroundwaterAllocationShortIni = 0.0

[routingOptions]
debugWaterBalance = True

lddMap      = PCRGLOBWB20/input30min/routing/lddsound_30min.map
cellAreaMap = PCRGLOBWB20/input30min/routing/cellarea30min.map
gradient    = PCRGLOBWB20/input30min/routing/Global_ChannelGradient-RVB_30min.map

# manning coefficient
manningsN   = 0.04

#~ # constant and/or minimum channel width (both are optional)
#~ constantChannelWidth = None
#~ minimumChannelWidth  = None

# routing method: (options are kinematicWave, simplifiedKinematicWave and accuTravelTime)
routingMethod = accuTravelTime

#~ # Maximum length of a sub time step in seconds (optional and only used if either kinematicWave or simplifiedKinematicWave is used)
#~ # - Note that too long sub time step may create water balance errors.
#~ # - Default values: 3600 seconds for 30 arcmin ; 720 seconds for 5 arcmin
#~ maxiumLengthOfSubTimeStep = 3600.
#~ maxiumLengthOfSubTimeStep = 720.

# lake and reservoir parameters
waterBodyInputNC = PCRGLOBWB20/input30min/routing/reservoirs/fromRensJune2013/reservoirparameterization/waterBodies30min.nc
onlyNaturalWaterBodies = True
#~ onlyNaturalWaterBodies = False

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = /home/sutan101/data/rens_seasonal_parameters/global_crop_coefficient_water_30min_rens.nc
minCropWaterKC         = 0.20

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = 0.0
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
waterBodyStorageIni            = /scratch/edwin/IWMI_run_07_nov/natural_run/states/waterBodyStorage_1960-12-31.map
channelStorageIni              = /scratch/edwin/IWMI_run_07_nov/natural_run/states/channelStorage_1960-12-31.map
readAvlChannelStorageIni       = /scratch/edwin/IWMI_run_07_nov/natural_run/states/readAvlChannelStorage_1960-12-31.map
avgDischargeLongIni            = /scratch/edwin/IWMI_run_07_nov/natural_run/states/avgDischargeLong_1960-12-31.map
avgDischargeShortIni           = /scratch/edwin/IWMI_run_07_nov/natural_run/states/avgDischargeShort_1960-12-31.map
m2tDischargeLongIni            = /scratch/edwin/IWMI_run_07_nov/natural_run/states/m2tDischargeLong_1960-12-31.map
avgBaseflowLongIni             = /scratch/edwin/IWMI_run_07_nov/natural_run/states/avgBaseflowLong_1960-12-31.map
riverbedExchangeIni            = /scratch/edwin/IWMI_run_07_nov/natural_run/states/riverbedExchange_1960-12-31.map
avgLakeReservoirInflowShortIni = /scratch/edwin/IWMI_run_07_nov/natural_run/states/avgLakeReservoirInflowShort_1960-12-31.map
avgLakeReservoirOutflowLongIni = /scratch/edwin/IWMI_run_07_nov/natural_run/states/avgLakeReservoirOutflowLong_1960-12-31.map
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
#~ subDischargeIni                = None

[extraOptionsforProjectWithIWMI]
# Additional options for the project with IWMI (Note that this option can only be used if allocationSegmentsForGroundSurfaceWater = None)

# option to activate this feature
#~ limitFossilGroundWaterAbstraction = True
limitFossilGroundWaterAbstraction = False
# estimate of thickness (m) of aceesible groundwater: active/renewable/shallow and deep/fossil groundwater
estimateOfTotalGroundwaterThickness    = /home/sutan101/data/aquifer_properties/thickness_30min.map
# estimate of capacity (m) of renewable groundwater (i.e. active groundwater that can be replenished by natural recharge)	
estimateOfRenewableGroundwaterCapacity = /home/sutan101/data/estimate_renewable_groundwater_storage/maximum_S3.map

[reportingOptions]
# output files that will be written in the disk in netcdf files:
outDailyTotNC = None 
outMonthTotNC = gwRecharge,totalRunoff,baseflow,totalEvaporation,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundWaterAbstraction,otherWaterSourceAbstraction,totalGroundwaterAbstraction,totalAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,net_liquid_water_to_soil,gwNetCapRise,runoff,actualET,precipitation
outMonthAvgNC = storGroundwater,storGroundwaterFossil,storGroundwaterTotal,totalActiveStorageThickness,totalWaterStorageThickness,discharge,fractionTotalEvaporation,accuBaseflow,storUppTotal,storLowTotal,satDegUpp,satDegLow
outMonthEndNC = storGroundwater,storGroundwaterFossil,storGroundwaterTotal,totalActiveStorageThickness,totalWaterStorageThickness
outAnnuaTotNC = gwRecharge,totalRunoff,baseflow,totalEvaporation,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundWaterAbstraction,otherWaterSourceAbstraction,totalGroundwaterAbstraction,totalAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,net_liquid_water_to_soil,gwNetCapRise,runoff,actualET,precipitation
outAnnuaAvgNC = storGroundwater,storGroundwaterFossil,storGroundwaterTotal,totalActiveStorageThickness,totalWaterStorageThickness,discharge,fractionTotalEvaporation,accuBaseflow
outAnnuaEndNC = storGroundwater,storGroundwaterFossil,storGroundwaterTotal,totalActiveStorageThickness,totalWaterStorageThickness
